/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input file : String
*   @output path : String
*   @output message : String
*   @output fileList : dw.util.ArrayList
*
*/
importPackage( dw.order );
importPackage( dw.net );
importPackage( dw.crypto );
importPackage( dw.util );
importPackage( dw.io );
importPackage( dw.web );
importPackage( dw.system );

function execute( args : PipelineDictionary ) : Number
{   
	//read file from ftp and write to impex     
	var ftpClient : SFTPClient = new SFTPClient();
	var host  : String = Site.getCurrent().getCustomPreferenceValue("ImportFeed_FTPHost"); //"sftp-stg.bazaarvoice.com";// 
    var user  : String =Site.getCurrent().getCustomPreferenceValue("ImportFeed_UserName"); //"guthyrenker";// 
    var pwd   : String =Site.getCurrent().getCustomPreferenceValue("ImportFeedt_FTPPassword"); //"bus5aQ_f";// 
    var fpath : String = Site.getCurrent().getCustomPreferenceValue("ImportFeed_FTPExportPath"); //"/testimport";//
    var impexFolder : String = Site.getCurrent().getCustomPreferenceValue("ImportFeed_ImpexPath"); //"catalog";//
  
    var productLine : String = Site.getCurrent().getCustomPreferenceValue("GRMProductLine").toLowerCase(); //"PA";//
  
   try 
	{	
	    if(!ftpClient.connect(host, user, pwd))
		{  args.message = StringUtils.format(MESSAGE_TEMPLATE, "ERROR", "Error while trying to connect to FTP server for Delete customer file", host, user, pwd, fpath, fname);
		} 
		
		if( !ftpClient.cd(fpath))
		{	 ftpClient.disconnect();
	         args.message = StringUtils.format(MESSAGE_TEMPLATE, "ERROR", "Error while accessing folder on FTP Server for Delete customer file", host, user, pwd, fpath, fname);
		}
	
	    var folderPathImpex = File.IMPEX + File.SEPARATOR + "src" +File.SEPARATOR + impexFolder;
	    
	    var currDate:Date = new Date();
        var tim:String= currDate.toISOString();
        var timDate:String=tim.substr(0,19);
        
        var timDate1:String=tim.substr(0,10);
        var dateArray : dw.util.ArrayList= timDate1.split("-");
     
	  
	    var filename : String ;
    
	    if(args.file=="catalog"){
	      filename = "mem_catalog_"+dateArray[0]+dateArray[1]+dateArray[2]+".xml"; }
	    else if(args.file=="storefront"){
	    	filename = "mem_catalog-storefront_"+dateArray[0]+dateArray[1]+dateArray[2]+".xml"; }
	    else if(args.file=="priceBook"){
	    	filename = "mem_pricebook_"+dateArray[0]+dateArray[1]+dateArray[2]+".xml"; }
	    else if(args.file=="tax"){
	    	filename = "mem_tax_"+dateArray[0]+dateArray[1]+dateArray[2]+".xml"; }	
	    else if(args.file=="shipping"){
	    	filename = "mem_shipping_"+dateArray[0]+dateArray[1]+dateArray[2]+".xml"; }
	    
	    else if(args.file=="sourceCode"){
	    	filename = "mem_sourcecode_"+dateArray[0]+dateArray[1]+dateArray[2]+".xml"; }
	    else if(args.file=="coupon"){
	    	filename = "mem_coupon_"+dateArray[0]+dateArray[1]+dateArray[2]+".xml"; }
	    else if(args.file=="promotion"){  
	    	filename = "mem_promotion_"+dateArray[0]+dateArray[1]+dateArray[2]+".xml"; }
	    else if(args.file=="keyCode"){
	    	filename = "mem_keycode-pricebook_"+dateArray[0]+dateArray[1]+dateArray[2]+".xml"; } 	 	 	
	    	
	   
	    var feedFilelist : dw.util.ArrayList =new dw.util.ArrayList(); 
	    var fileList: Array=ftpClient.list(fpath);
	    var filenameFormat="_"+args.file+"_"+productLine+"_"+dateArray[0]+dateArray[1]+dateArray[2]+"_";
	    
	    for each(var file : dw.net.SFTPFileInfo in fileList)
	    {    var filename1 : String=file.name;
	    	if(filename1.indexOf(filenameFormat)>0)
	    	{ 	 // filename_storefront  =filename;
	    		if(filename1.indexOf("acq")<0){
	    		 feedFilelist.add(file);
	    	     } 
	    	}
	    }         	 	
	    
	    var itr: dw.util.Iterator= feedFilelist.iterator();
	    var latestFile : dw.net.SFTPFileInfo=null;
	   
	    if(itr.hasNext()) {
	    	latestFile= itr.next(); }
	    
	    while (itr.hasNext())
	    {  
	         var file2: dw.net.SFTPFileInfo;
	         file2 = itr.next(); 	        	
 	         var date1 : Date = latestFile.getModificationTime();
 	         var date2 : Date= file2.getModificationTime();
 	         if(date1<date2)  
 	         {  latestFile=file2;
 	          } 
 	    }
	    
	    if(latestFile)
	    {
	      filename = latestFile.getName();
	    }
	    
	   var file_impex : File = new File( folderPathImpex + File.SEPARATOR + filename);	
	
	    var gotFile: Boolean = ftpClient.getBinary(filename, file_impex);
	
         
       	//var archivePath:String =Site.getCurrent().getCustomPreferenceValue("ImportFeed_FTPExportPath") +"Archive";
       	var archivePath:String =Site.getCurrent().getCustomPreferenceValue("ImportFeed_FTPExportPath");
    	var archivefile:String; 
    	
	    
	    if(gotFile) { 
	    	//archivefile =archivePath+File.SEPARATOR +filename+"."+timDate+".processed";
	    	archivefile =archivePath+filename+".processed";
	        var b: Boolean=ftpClient.putBinary(archivefile, file_impex);
	    	//var delfile1: Boolean=ftpClient.del(filename);
	    	  args.path=File.SEPARATOR + impexFolder+  File.SEPARATOR + filename;
	     }
	     
		ftpClient.disconnect();
		
        var feedFilelist : dw.util.ArrayList =new dw.util.ArrayList(); 
	   	feedFilelist.add(filename);
	  
	    args.fileList=feedFilelist;
	  
	   
	  } catch (ex) {  

      //  args.message = StringUtils.format(MESSAGE_TEMPLATE, "ERROR", "Exception=" + ex.message, host, user, pwd, fpath, fname);
        return PIPELET_ERROR;
    }
    
     return PIPELET_NEXT; 
}


