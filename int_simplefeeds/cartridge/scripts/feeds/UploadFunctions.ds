
importPackage( dw.io );
importPackage( dw.net );
importPackage( dw.system );

function uploadFileWebDAV( file : File, remoteFolderURL : String, remoteFile : String, remoteLogin : String, remotePassword : String ) : boolean
{
	// connect
	var webDAVClient : WebDAVClient;
	
	if ( !empty( remoteLogin ) && !empty( remotePassword ) )
	{
		// use authentication
		webDAVClient = new WebDAVClient( remoteFolderURL, remoteLogin, remotePassword );
	}
	else
	{
		// no authentication
		webDAVClient = new WebDAVClient( remoteFolderURL );
	}

	// upload
	var tmpRemoteFile : String = remoteFile + ".tmp";
	
	try
	{
		webDAVClient.put( tmpRemoteFile, file );
	}
	catch ( ex )
	{
		Logger.getLogger("simplefeeds").error( "UploadFeed: Error while uploading " + remoteFolderURL + tmpRemoteFile + ": " + ex );		
		return false;
	}

	if ( !webDAVClient.succeeded() )
	{
		Logger.getLogger("simplefeeds").error( "UploadFeed: Error while uploading " + remoteFolderURL + tmpRemoteFile + ": " +
			webDAVClient.statusCode + " " + webDAVClient.statusText );		
		return false;
	}
	
	// rename
	try
	{
		webDAVClient.move( tmpRemoteFile, remoteFile );
	}
	catch ( ex )
	{
		Logger.getLogger("simplefeeds").error( "UploadFeed: Error while renaming " + 
			remoteFolderURL + tmpRemoteFile + " to " + remoteFolderURL + remoteFile + ": " + ex );	
		return false;
	}

	if ( !webDAVClient.succeeded() )
	{
		Logger.getLogger("simplefeeds").error( "UploadFeed: Error while renaming " + 
			remoteFolderURL + tmpRemoteFile + " to " + remoteFolderURL + remoteFile + ": " +
			webDAVClient.statusCode + " " + webDAVClient.statusText );		
		return false;
	}
	
	// disconnect
	webDAVClient.close();
	
    return true;
}

function uploadFileSFTP( file : File, remoteFolderURL : String, remoteFile : String, remoteLogin : String, remotePassword : String ) : boolean
{
    // for SFTP remoteLogin and remotePassword are required
    if ( empty( remoteLogin ) )
    {
    	Logger.getLogger("simplefeeds").error( "UploadFeed: Parameter RemoteLogin empty (required for SFTP)" );
    	return false;
    }

    if ( empty( remotePassword ) )
    {
    	Logger.getLogger("simplefeeds").error( "UploadFeed: Parameter RemotePassword empty (required for SFTP)" );
    	return false;
    }

    // parse URL, e.g. "sftp://sftp.myserver.com:22/folder/"
	var params : Array = /^sftp:\/\/([^\/:]+)(?::(\d+))?(\/(?:.*\/)?)$/.exec( remoteFolderURL );

	if ( params == null || params.length != 4 )
	{
    	Logger.getLogger("simplefeeds").error( "UploadFeed: Parameter RemoteFolderURL not recognized, RemoteFolderURL: " + remoteFolderURL );
    	return null;
	}

	var host : String = params[1];
	var port : Number = null;
	// params[2] is undefined if there was no port provided
	if ( params[2] != undefined )
	{
		port = new Number( params[2] );
	}
	var path : String = params[3];
	
	// connect
	var sftpClient : SFTPClient = new SFTPClient();
	var result : boolean;
	
	try
	{
		if ( port != null )
		{
			result = sftpClient.connect( host, port, remoteLogin, remotePassword );
		}
		else
		{
			// use default port
			result = sftpClient.connect( host, remoteLogin, remotePassword );
		}
	}
	catch ( ex )
	{
		Logger.getLogger("simplefeeds").error( "UploadFeed: Error while connecting to " +
			host + ( ( port != null ) ? ( ":" + port ) : "" ) + ": " + ex );		
		return false;
	}

	if ( !result )
	{
		Logger.getLogger("simplefeeds").error( "UploadFeed: Error while connecting to " +
			host + ( ( port != null ) ? ( ":" + port ) : "" ) + ": " + sftpClient.errorMessage );		
		return false;
	}

	// upload
	var tmpRemoteFile : String = remoteFile + ".tmp";
	
	try
	{
		result = sftpClient.putBinary( path + tmpRemoteFile, file );
	}
	catch ( ex )
	{
		Logger.getLogger("simplefeeds").error( "UploadFeed: Error while uploading " + 
			path + tmpRemoteFile + ": " + ex );		
		return false;
	}

	if ( !result )
	{
		Logger.getLogger("simplefeeds").error( "UploadFeed: Error while uploading " + 
			path + tmpRemoteFile + ": " + sftpClient.errorMessage );		
		return false;
	}
	
	// rename
	try
	{
		result = sftpClient.rename( path + tmpRemoteFile, path + remoteFile );
	}
	catch ( ex )
	{
		Logger.getLogger("simplefeeds").error( "UploadFeed: Error while renaming " + 
			path + tmpRemoteFile + " to " + path + remoteFile + ": " + ex );		
		return false;
	}

	if ( !result )
	{
		Logger.getLogger("simplefeeds").error( "UploadFeed: Error while renaming " + 
			path + tmpRemoteFile + " to " + path + remoteFile + ": " + sftpClient.errorMessage );		
		return false;
	}
	
	// disconnect
	sftpClient.disconnect();
	
    return true;
}