/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @output pathcatalog : String
*   @output pathstorefront : String
*   @output pathpricebook : String
*   @output pathpromotions : String
*   @output message : String
*   @output fileList : dw.util.ArrayList
*
*/
importPackage( dw.order );
importPackage( dw.net );
importPackage( dw.crypto );
importPackage( dw.util );
importPackage( dw.io );
importPackage( dw.web );
importPackage( dw.system );

function execute( args : PipelineDictionary ) : Number
{
	//read file from ftp and write to impex     
	var ftpClient : SFTPClient = new SFTPClient();
	var host  : String = Site.getCurrent().getCustomPreferenceValue("ImportFeed_FTPHost"); //"sftp-stg.bazaarvoice.com";// 
    var user  : String =Site.getCurrent().getCustomPreferenceValue("ImportFeed_UserName"); //"guthyrenker";// 
    var pwd   : String =Site.getCurrent().getCustomPreferenceValue("ImportFeedt_FTPPassword"); //"bus5aQ_f";// 
    var fpath : String = Site.getCurrent().getCustomPreferenceValue("ImportFeed_FTPExportPath"); //"/testimport";//
    var impexFolder : String = Site.getCurrent().getCustomPreferenceValue("ImportFeed_ImpexPath"); //"catalog";//
    
     
    try 
	{	
	    if(!ftpClient.connect(host, user, pwd))
		{  args.message = StringUtils.format(MESSAGE_TEMPLATE, "ERROR", "Error while trying to connect to FTP server for Delete customer file", host, user, pwd, fpath, fname);
		} 
		
		if( !ftpClient.cd(fpath))
		{	 ftpClient.disconnect();
	         args.message = StringUtils.format(MESSAGE_TEMPLATE, "ERROR", "Error while accessing folder on FTP Server for Delete customer file", host, user, pwd, fpath, fname);
		}
	
	    var folderPathImpex = File.IMPEX + File.SEPARATOR + "src" +File.SEPARATOR + impexFolder;
	  
	    var fileList: Array=ftpClient.list(fpath);
	  	var filename_storefront : String ;
	    var filename_catalog : String ;
	    var filename_pricebook : String;
	    var filename_promotions : String ;
	    
	    var feedFilelist : dw.util.ArrayList =new dw.util.ArrayList(); 
	       
	    for each(var file : File in fileList)
	    {    var filename : String=file.name;
	    	if(filename.indexOf("catalog-storefront")>0)
	    	{ 	 filename_storefront  =filename;
	    		feedFilelist.add(filename);
	    	}
	    	else if(filename.indexOf("catalog")>0)
	    	{ filename_catalog  =filename;
	    			feedFilelist.add(filename);
	    	}
	    	else if(filename.indexOf("pricebook")>0)
	    	{	 filename_pricebook =filename;
	    			feedFilelist.add(filename);
	    	}	
	    	else if (filename.indexOf("promotion")>0)
	    	{  filename_promotions  =filename;
	    			feedFilelist.add(filename);
	    	}
	               
	    }        
	     //var filename_catalog : String =Site.getCurrent().getCustomPreferenceValue('FileName_Catalog');
	   	var file_catalog : File = new File( folderPathImpex + File.SEPARATOR + filename_catalog);
	   	
	   	//var filename_storefront : String =Site.getCurrent().getCustomPreferenceValue('FileName_storefront');
	   	var file_storefront : File = new File( folderPathImpex + File.SEPARATOR + filename_storefront);
	   	
	   //	var filename_pricebook : String =Site.getCurrent().getCustomPreferenceValue('FileName_pricebook');
	   	var file_pricebook : File = new File( folderPathImpex + File.SEPARATOR + filename_pricebook);
	   	
	   	//var filename_promotions : String =Site.getCurrent().getCustomPreferenceValue('FileName_promotions');
	   	var file_promotions : File = new File( folderPathImpex + File.SEPARATOR + filename_promotions);
	     
	    
	    var gotCatalogFile: Boolean = ftpClient.getBinary(filename_catalog, file_catalog);
	    var gotStorefronFile: Boolean = ftpClient.getBinary(filename_storefront, file_storefront);
	    var gotPricebookFile: Boolean = ftpClient.getBinary(filename_pricebook, file_pricebook);
	    var gotPromotionFile: Boolean = ftpClient.getBinary(filename_promotions, file_promotions);
	    
	    
        var currDate:Date = new Date();
        var tim:String= currDate.toISOString();
        var timDate:String=tim.substr(0,19);
           
       	var archivePath:String =Site.getCurrent().getCustomPreferenceValue("ImportFeed_FTPExportPath")+File.SEPARATOR +"Archive";
    	var archivefile:String; 
    	
	    
	    if(gotCatalogFile) { 
	    	archivefile =archivePath+File.SEPARATOR +filename_catalog+timDate;
	        var b: Boolean=ftpClient.putBinary(archivefile, file_catalog);
	    	var delfile1: Boolean=ftpClient.del(filename_catalog);
	    	args.pathcatalog=File.SEPARATOR + impexFolder+  File.SEPARATOR + filename_catalog;
	     }
	    if(gotStorefronFile) { 
	    	archivefile =archivePath+File.SEPARATOR +filename_storefront+timDate;
	        var b: Boolean=ftpClient.putBinary(archivefile, file_catalog);
	    	var delfile2: Boolean=ftpClient.del(filename_storefront); 
	    	args.pathstorefront = File.SEPARATOR + impexFolder+  File.SEPARATOR + filename_storefront;
	    } 
	    if(gotPricebookFile) {
	    	 archivefile =archivePath+File.SEPARATOR +filename_pricebook+timDate;
	         var b: Boolean=ftpClient.putBinary(archivefile, file_catalog);
	    	 var delfile3: Boolean=ftpClient.del(filename_pricebook); 
	    	 args.pathpricebook =File.SEPARATOR + impexFolder+  File.SEPARATOR + filename_pricebook;
	    } 
	    if(gotPromotionFile) {
	    	 archivefile =archivePath+File.SEPARATOR +filename_promotions+timDate;
	         var b: Boolean=ftpClient.putBinary(archivefile, file_catalog);
	    	 var delfile4: Boolean=ftpClient.del(filename_promotions); 
	    	  args.pathpromotions =File.SEPARATOR + impexFolder+  File.SEPARATOR + filename_promotions;
	    } 
	    	
		ftpClient.disconnect();
		
        
	   	
	  
	    args.fileList=feedFilelist;
	   
	   
	  } catch (ex) {  

        args.message = StringUtils.format(MESSAGE_TEMPLATE, "ERROR", "Exception=" + ex.message, host, user, pwd, fpath, fname);
        return PIPELET_ERROR;
    }
    
     return PIPELET_NEXT; 
}


