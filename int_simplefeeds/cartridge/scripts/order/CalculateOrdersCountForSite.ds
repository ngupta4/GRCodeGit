/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*	@output Count	: Number 
*	@output Status	: dw.system.Status 
*/
importPackage( dw.system );
importPackage( dw.util);
importPackage( dw.order );

function execute( args : PipelineDictionary ) : Number
{
	Logger.getLogger("simplefeeds").debug("CalculateOrdersCountForSite: Start"); 
	try{
		var currentCalendare : Calendar = new Calendar (new Date());
		var endDate : Date = new Date (currentCalendare.get(Calendar.YEAR),null,currentCalendare.get(Calendar.DAY_OF_YEAR));
		currentCalendare.roll(Calendar.DAY_OF_YEAR, false);
		var startDate : Date = new Date (currentCalendare.get(Calendar.YEAR),null,currentCalendare.get(Calendar.DAY_OF_YEAR));
		var orders : SeekableIterator = OrderMgr.queryOrders("creationDate<{0} AND creationDate >={1}", "orderNo", endDate, startDate);
		var count : Number = orders.count;
		var siteCount : Number = System.getPreferences().custom.grOrderCount;
		siteCount += count;
		System.getPreferences().custom.grOrderCount = siteCount;
		Logger.getLogger("simplefeeds").debug("CalculateOrdersCountForSite: End");
		args.Count = count; 
		args.Status = new Status(Status.OK,"IMPEX-0","OK");
	}catch(e){
		var exception : String = e;
		Logger.getLogger("simplefeeds").error("CalculateOrdersCountForSite: Error"+e);
		args.Status = new Status(Status.ERROR,"IMPEX-130"+e);
		return PIPELET_ERROR;
	}
	
	return PIPELET_NEXT;
}
