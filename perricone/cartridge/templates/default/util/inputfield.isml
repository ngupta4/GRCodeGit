<iscomment>
	Displays a input field for templates, such as registration and editprofile.

	Parameters:
	formfield	: form field to be displayed
	type		: input type
	maxlength	: length of field input
	minlength	: length of field input
	size:		: size of field
	id 			: field ID (optional)

	xhtmlclass	: the class to set additionally to the default classes
	label       : if set to true or not existing, the label will be rendered,
	              if set to false, label will not be rendered
	value       : if set to true or not existing, the value input will be rendered,
	              if set to false, value input will not be rendered

	p_dynamic	: if given and not empty the name of the resulting input element
	              is unique (to avoid prefilling by the browser)

	attribute1  : optional attribute (name) of the resulting <input> tags
	value1      : optional value of that attribute
	...
	attribute4
	value4

	If type = { select, password, input } and label should be rendered, the result consists of 2 <td></td> elements,
	otherwise 1 <td></td> element.
</iscomment>

 	<iscomment>Determining attributes</iscomment>
 	<isscript>
 		var pi_attributes 	: String = '';
 		var pi_name 		: String = '';
 		<iscomment> used for client side validation especially for equalTo rule (e.g. password, confirmpassword. see app.js for details and example</iscomment>
 		var pi_id 			: String = '';

 		/* Prevent maxlength from being used by select and textarea */
 		if (pdict.type != 'select' && pdict.type != 'textarea')
 		{
			if ( pdict.maxlength != null)
			{
				pi_attributes += ' maxlength="' + pdict.maxlength + '"';
			}
			else if(pdict.formfield.maxLength != null)
			{
				pi_attributes += ' maxlength="' + pdict.formfield.maxLength + '"';
			}
		}
		/* Prevent minlength from being used by select and textarea */
 		if (pdict.type != 'select' && pdict.type != 'textarea')
 		{
			if ( pdict.minlength != null)
			{
				pi_attributes += ' minlength="' + pdict.minlength + '"';
			}
			else if(pdict.formfield.minLength != null)
			{
				pi_attributes += ' minlength="' + pdict.formfield.minLength + '"';
			}
		}
 		if( pdict.attribute1 != null && pdict.value1 != null )
 		{
 			pi_attributes += ' ' + pdict.attribute1 + '="' + pdict.value1 + '"';
 		}
 		if( pdict.attribute2 != null && pdict.value2 != null )
 		{
 			pi_attributes += ' ' + pdict.attribute2 + '="' + pdict.value2 + '"';
 		}
 		if( pdict.attribute3 != null && pdict.value3 != null )
 		{
 			pi_attributes += ' ' + pdict.attribute3 + '="' + pdict.value3 + '"';
 		}
 		if( pdict.attribute4 != null && pdict.value4 != null )
 		{
 			pi_attributes += ' ' + pdict.attribute4 + '="' + pdict.value4 + '"';
 		}

 		if( ! empty(pdict.p_dynamic)  )
 		{
 			pi_name = pdict.formfield.dynamicHtmlName;
 		}
 		else
 		{
 			pi_name = pdict.formfield.htmlName;
 		}

 		pi_id = pdict.id || pi_name; // for client side validation, id should be same to avoid confusion in case of equalTo rule

 		var aTag : String = ''; // for isprints to prevent encoding

 		var additionalClass : String = '';
 		if (! empty(pdict.xhtmlclass))
 		{
 			additionalClass = ' ' + pdict.xhtmlclass;
 		}

		<iscomment>
			 if it is a phone, country field then add these as css class names as well
			 so that client side validation can work
			 please note this is kind of hack (to hard code ids) to avoid mass changes in the templates wherever phone/country is used 
		</iscomment>
		if (pdict.formfield.formId == 'phone' || pdict.formfield.formId == 'country' || pdict.formfield.formId == 'number' || pdict.formfield.formId == 'zip' ) {
			additionalClass = ' ' + pdict.formfield.formId;
		}
		if (pdict.formfield.formId == 'daytimephone' || pdict.formfield.formId == 'eveningphone' ) {
			additionalClass = ' phone';
		}
		if (pdict.formfield.formId == 'email' || pdict.formfield.formId == 'emailconfirm') {
			additionalClass = ' mail';
		}
		if (pdict.formfield.formId == 'billingZipCode' ) {
			additionalClass = ' ZipCode';
		}
 		<iscomment> used for client side validation DO NOT remove it! otherwise client side validation won't work!!!</iscomment>
 		additionalClass += (pdict.formfield.mandatory == true) ? " required": "";
 	</isscript>

	<isif condition="${(pdict.type == 'select') || (pdict.type == 'password') || (pdict.type == 'input') || (pdict.type == 'textarea')}">

		<isif condition="${empty(pdict.label) || !pdict.label == 'false'}">
			<iscomment>display the field label</iscomment>
			<div class="label">
				<isif condition="${!pdict.formfield.valid}">
					<span class="errorlabel"><isprint value="${Resource.msg(pdict.formfield.label,'forms',null)}"/></span>
				<iselse/>
					<span class="labeltext"><isprint value="${Resource.msg(pdict.formfield.label,'forms',null)}"/></span>
				</isif>
				
				<iscomment>Display Required Star</iscomment>
				<isif condition="${pdict.formfield.mandatory}">
					<span class="requiredindicator">*</span>
				</isif>
			</div><!-- END: label -->
		</isif>

		<isif condition="${empty(pdict.value) || !pdict.value == 'false'}">
			<iscomment>display input/select fields</iscomment>
			<div class="value">

				<iscomment>display select boxes</iscomment>
				<isif condition="${pdict.type == 'select'}">
				 	<isscript>/* to prevent HTML encoding */
						aTag = '<select class="selectbox' + additionalClass + '" id="' + pi_id + '" name="' + pi_name + '" ' + pi_attributes + '>';
				 	</isscript>

				 	<isprint value="${aTag}" encoding="off"/>

					<isloop items="${pdict.formfield.options}" var="option">
						<isscript>
							// code to avoid empty option tags, because this causes an XHTML warning
							var label = Resource.msg(option.label,'forms',null);
							var displayValue = label;

							if (displayValue == null || displayValue == '')
							{
								displayValue = "<!-- Empty -->";
							}
							else
							{
								// encode it already, because in case of empty, we want to
								// avoid encoding
								displayValue = StringUtils.stringToHtml(displayValue);
							}
						</isscript>
						<isif condition="${option.selected || option.htmlValue===pdict.formfield.getHtmlValue()}">
							<option class="selectoption" label="${label}" value="${option.htmlValue}" selected="selected"><isprint value="${displayValue}" encoding="off"/></option>
						<iselse/>
							<option class="selectoption" label="${label}" value="${option.htmlValue}"><isprint value="${displayValue}" encoding="off"/></option>
						</isif>
					</isloop>
					</select>
				<iscomment>display password input fields</iscomment>
				<iselseif condition="${pdict.type == 'password'}"/>
				 	<isscript>/* to prevent HTML encoding */
						aTag = '<input class="textinputpw' + additionalClass + '" id="' + pi_id + '" type="password" name="' + pi_name + '" value="' + StringUtils.stringToHtml(pdict.formfield.htmlValue) + '" ' + pi_attributes + '/>';
				 	</isscript>
				 	<isprint value="${aTag}" encoding="off"/>

				<iscomment>display normal input fields</iscomment>
				<iselseif condition="${pdict.type == 'input'}"/>
				 	<isscript>/* to prevent HTML encoding */
						aTag = '<input class="textinput' + additionalClass + '" id="' + pi_id + '" type="text" name="' + pi_name + '" value="' + StringUtils.stringToHtml(pdict.formfield.htmlValue) + '" ' + pi_attributes + '/>';
				 	</isscript>
				 	<isprint value="${aTag}" encoding="off"/>
				 	<isif condition="${pi_id.indexOf("cvn") > -1}"><img src="${URLUtils.staticURL('../images/ccCVN.png')}" /></isif>
				<!-- display text area input field -->
				<iselseif condition="${pdict.type == 'textarea'}"/>
				 	<isscript>/* to prevent HTML encoding */
						aTag = '<!-- mp_trans_disable_start -->\n<textarea class="textbox' + additionalClass + '" id="' + pi_id + '" name="' + pi_name + '"' + pi_attributes + '>' + StringUtils.stringToHtml(pdict.formfield.htmlValue) + '</textarea>\n<!-- mp_trans_disable_end -->\n';
				 	</isscript>
				 	<isprint value="${aTag}" encoding="off"/>
				</isif>
				
				<isif condition="${!empty(pdict.formfield.label)}">
					<span class="hidden json" style="display: none;"></span><!-- this MUST be immediately after the input/field tag. Hiden data to be attached to the input field (app.hiddenData in app.js -->
				</isif>
				<iscomment>display description or error message</iscomment>
				<isif condition="${pdict.formfield.valid}">
					<isif condition="${!empty(pdict.formfield.description)}">
						<span class="caption"><!--  Display Form Error Message --><isprint value="${Resource.msg(pdict.formfield.description,'forms',null)}"/></span>
					</isif>
				<iselse/>
					<isif condition="${!empty(pdict.formfield.error)}">
						<span class="errormessage"><!--  Display Form Error Message --><isprint value="${Resource.msg(pdict.formfield.error,'forms',null)}"/></span>
					<iselseif condition="${!empty(pdict.formfield.description)}"/>
						<span class="caption"><!--  Display Form Error Message --><isprint value="${Resource.msg(pdict.formfield.description,'forms',null)}"/></span>
					</isif>
				</isif>
			</div>
		</isif>

	<iscomment>display checkbox fields</iscomment>
	<iselseif condition="${pdict.type == 'checkbox'}"/>

		<isif condition="${empty(pdict.value) || !pdict.value == 'false'}">
			<div class="checkbox">
			<isprint value="${aTag}" encoding="off"/>

				<isif condition="${pdict.formfield.checked}">
				 	<isscript>/* to prevent HTML encoding */
						aTag = '<input class="checkinput' + additionalClass + '" type="checkbox" checked="checked" name="' + pi_name + '" id="' + pi_name + '" value="' + StringUtils.stringToHtml(pdict.formfield.htmlValue) + '" ' + pi_attributes +'/>';
				 	</isscript>
				<iselse/>
				 	<isscript>/* to prevent HTML encoding */
						aTag = '<input class="checkinput' + additionalClass + '" type="checkbox" name="' + pi_name + '" id="' + pi_name + '" value="' + StringUtils.stringToHtml(pdict.formfield.htmlValue) + '" ' + pi_attributes + '/>';
				 	</isscript>
				</isif>
			 	<isprint value="${aTag}" encoding="off"/>

				<isif condition="${empty(pdict.label) || pdict.label == 'true'}">
					<label for="${pi_name}"><isprint value="${Resource.msg(pdict.formfield.label,'forms',null)}"/></label>
				</isif>

				<iscomment>display required star</iscomment>
				<isif condition="${pdict.formfield.mandatory}">
					<span class="requiredindicator">*</span>
				</isif>

				<iscomment>display description or error message</iscomment>
				<isif condition="${pdict.formfield.valid}">
					<isif condition="${!empty(pdict.formfield.description)}">
						<span class="caption"><isprint value="${Resource.msg(pdict.formfield.description,'forms',null)}"/></span>
					</isif>
				<iselse/>
					<isif condition="${!empty(pdict.formfield.error)}">
						<span class="errormessage"><isprint value="${Resource.msg(pdict.formfield.error,'forms',null)}"/></span>
					<iselseif condition="${!empty(pdict.formfield.description)}"/>
						<span class="caption"><isprint value="${Resource.msg(pdict.formfield.description,'forms',null)}"/></span>
					</isif>
				</isif>
			</div>
		</isif>

	<iscomment>hidden fields</iscomment>
	<iselseif condition="${pdict.type == 'hidden'}"/>

	 	<isscript>/* to prevent HTML encoding */
			aTag = '<input type="hidden" name="' + pi_name + '" id="' + pi_id + '" value="' + StringUtils.stringToHtml(pdict.formfield.htmlValue) + '" ' + pi_attributes +'/>';
	 	</isscript>
	 	<isprint value="${aTag}" encoding="off"/>
	</isif>
