/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input CurrentHttpParameterMap : dw.web.HttpParameterMap ParameterMap
*   @input Mode : String The Mode
*   @output Result : String The Result
*
*/
importPackage( dw.system );
importPackage (dw.web );
importPackage( dw.io );

function execute( pdict : PipelineDictionary ) : Number
{

    // read pipeline dictionary input parameter 
    // ... = args.ExampleIn;

    // insert business logic here

    // write pipeline dictionary output parameter

    // args.ExampleOut = ...
	var httpMap = pdict.CurrentHttpParameterMap;
	var buildreason = httpMap.buildreason.value;
	var mode : String = pdict.Mode;
	
	pdict.Result = "Reason: " + buildreason;
	
	var file	 : File = "test.txt";
	var content : String = buildreason;
	
	content = httpMap.email.value + " " + content;
	
	var file : File = new File(File.CATALOGS + File.SEPARATOR + "cpo-bosch" +  File.SEPARATOR + "default" +  File.SEPARATOR + "requestbuild.txt");
	var file2 : File = new File(File.CATALOGS + File.SEPARATOR + "cpo-bosch" +  File.SEPARATOR + "default" +  File.SEPARATOR + "requestbuild.js");
	var file3 : File = new File(File.CATALOGS + File.SEPARATOR + "cpo-bosch" +  File.SEPARATOR + "default" +  File.SEPARATOR + "update.js");
	
	if (mode == "deleteRequest")
	{
		
		var writer : FileWriter = new FileWriter(file);
		writer.write("");
		writer.flush();
		writer.close();
		
		writer = new FileWriter(file2);
		writer.write("var build=false;");
		writer.flush();
		writer.close();
		
	    pdict.Result = "Request deleted";
	    return PIPELET_NEXT;
	}
	else if (mode == "saveUpdate")
	{
		writer = new FileWriter(file3);
		var content = httpMap.updatemessage.value;
		content = "var updatemessage='" + content + "'";
		writer.write(content);
		writer.flush();
		writer.close();
		
	    pdict.Result = "Written: " + content;
	    return PIPELET_NEXT;
	}
	//Catalogs/cpo-bosch
	   // /on/demandware.static/Sites-Bosch-Site/Sites-cpo-bosch/default/v1259254608268/requestbuild.txt
		
		
		var writer : FileWriter = new FileWriter(file);
		writer.write(content);
		writer.flush();
		writer.close();
		
		writer = new FileWriter(file2);
		writer.write("var build=true;");
		writer.flush();
		writer.close();
		
	
	
    return PIPELET_NEXT;
}
