/**
*	Script to update the Billing Address in MW  
*
*	 @input mwid : String
*  	 @input Request : dw.system.Request
*	 @input sessionId : String
*	 @input ipAddress : String
*	 @input addressForm : dw.web.Form
*    @output status : String 
*
*/
importPackage( dw.io );
importPackage( dw.web );
importPackage( dw.system );
importPackage( dw.net );

importScript('grmiddleware/libGRMiddleware.ds');
importScript('common/libUtils.ds');
function execute( args : PipelineDictionary ) : Number
{	
	try {	
	logInfo ("Entering  CustomerBillingAddress.ds");	
	// Create request XML
	var xmlWriter : StringWriter = new StringWriter();
	createRequestXML(xmlWriter, args.addressForm, args.sessionId, args.ipAddress);
	var addressXML : String = xmlWriter.toString();  
	
	var request:Request = args.Request;
    var uid:String = getCustomerUID(request);
    var transactionID = getTransactionID();
	//Create URL
	var serviceURL : String = getServiceURL(args.mwid, uid, transactionID);
	logDebug ("CustomerShippingAddress api URL :"+serviceURL);
	logDebug ("Registration request XML =" + addressXML);
	
	 // Call GR Service
	 var http : HTTPClient = new HTTPClient();
	http.setRequestHeader('Content-Type','text/xml');
    http = callMWAPI(http, "PUT", serviceURL,addressXML);
	
	//Parse Reaponse
	var response : String = http.text;
	var errorResponse : String = http.errorText;
	var responseXML : XML = null;

	if( !empty(errorResponse) ) {
		response = errorResponse;
	}
	responseXML = new XML(response);
	
	if( !empty(responseXML) ) 
	{
		var status = responseXML.status.toString();
		args.status = status;
		if(status == '200'){
			//success			
		}else {
			getErrorResponse(responseXML);
		}
	}else {
			getErrorResponse(responseXML);
	}
	logInfo ("Exiting  CustomerShippingAddress.ds");
	  return PIPELET_NEXT;
	}catch(e){
		logError (e);
		return PIPELET_ERROR;
	}
}

function createRequestXML (xmlWriter : Writer, addressForm : Form, sessionId:String, ipAddress : String,cartID : String) {
	logInfo ("Entering  createRequestXML function");
	var dayphone : String = addressForm.address.phone.value;
	if(null != addressForm.address.phone.value){
		var v1= dayphone.substr(0,3);
		var v2= dayphone.substr(3,3);
		var v3= dayphone.substr(6,4);	
		dayphone = v1 + '-' + v2 + '-' + v3;
	}
	var evePhone : String = addressForm.address.eveningPhone.value;
	if(null != addressForm.address.eveningPhone.value){
		var v1= evePhone.substr(0,3);
		var v2= evePhone.substr(3,3);
		var v3= evePhone.substr(6,4);	
		evePhone = v1 + '-' + v2 + '-' + v3;
	}
	// Write XML header to file
	
	xmlWriter.write('<?xml version="1.0" encoding="UTF-8"?>\n');
	xmlWriter.write('<customerRequest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="customerBillingAddressRequest_0-1.xsd">\n');
	xmlWriter.write('	<clientId>Demandware</clientId>\n');
	xmlWriter.write('	<sessionData>\n');
	xmlWriter.write('		<sessionId><![CDATA['+sessionId+']]></sessionId>\n');
	xmlWriter.write('		<ipAddress><![CDATA['+ipAddress+']]></ipAddress>\n');
	xmlWriter.write('	</sessionData>\n');
	xmlWriter.write('	<shippingSameAsBilling>false</shippingSameAsBilling>\n');    
	xmlWriter.write('	<billingAddress>\n');	
	xmlWriter.write('		<firstName><![CDATA['+addressForm.address.firstname.value+']]></firstName>\n');
	xmlWriter.write('		<lastName><![CDATA['+addressForm.address.lastname.value+']]></lastName>\n');	
	xmlWriter.write('		<address><![CDATA['+addressForm.address.address1.value+']]></address>\n');
	if(null!=addressForm.address.address2.value)
	{
		xmlWriter.write('		<address><![CDATA['+addressForm.address.address2.value+']]></address>\n');
	}
	xmlWriter.write('		<city><![CDATA['+addressForm.address.city.value+']]></city>\n');	
	xmlWriter.write('		<state><![CDATA['+addressForm.address.states.state.value+']]></state>\n');
	xmlWriter.write('		<postalCode><![CDATA['+addressForm.address.zip.value+']]></postalCode>\n');
	xmlWriter.write('		<countryCode><![CDATA['+addressForm.address.country.value+']]></countryCode>\n');
	if(null != addressForm.address.phone.value){
	xmlWriter.write('		<phones>\n');
		xmlWriter.write('      		<dayPhone><![CDATA['+dayphone+']]></dayPhone>\n');
		if(null != addressForm.address.eveningPhone.value){
			xmlWriter.write('      		<eveningPhone><![CDATA['+evePhone+']]></eveningPhone>\n');
		}
	xmlWriter.write('		</phones>\n');
	}	
	xmlWriter.write('	</billingAddress>\n');	
	xmlWriter.write('</customerRequest>\n');
	logInfo ("Exiting  createRequestXML function");
}

function getServiceURL(mwid : String, uid : String, trans: String) {
	//https://grws.grdev.com/customer/billing-address/mwid/<mwid>/verify/<verifyFlag>/brand/<brandId>/uid/<uid>/trans/<transactionID>
	var baseURL : String = Site.current.getCustomPreferenceValue("middlewareAPIURL");
	var brandID = Site.current.getCustomPreferenceValue("GRMProductLine");
	baseURL= baseURL + "/customer/billing-address/mwid/"+ mwid +"/brand/"+brandID+"/uid/"+ uid +"/trans/"+trans ;	
	return baseURL
}