/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
*   @input Request : dw.system.Request
*   @input mwid : String
*	@output statusMessage : String
*   @output ErrorContainer : Array
*   @output continuityObj : Object
*
*/
importPackage( dw.system );
importPackage( dw.io );
importPackage( dw.net );
importPackage( dw.util );
importPackage( dw.web );
importPackage( dw.crypto );
importPackage(dw.object);
importScript( "grmiddleware/libGRMiddleware.ds" );
importScript('common/libUtils.ds');


function execute( args : PipelineDictionary ) : Number
{
   	// No XML which the serviceneeds to consume
	
	var errorContainer : Array = [];
	var error = null;
	
	// Figure out service URL
	//Get UID
	var request:Request = args.Request;
	var uid:String = getCustomerUID(request);
  	var transactionID = getTransactionID();
  	var brand= Site.current.getCustomPreferenceValue("GRMProductLine");
  	var mwid= args.mwid;
	var serviceURL : String = getContinuityServiceURL(mwid, brand, uid,transactionID);
	
   //Continuity Service URL---Web service call
   	var http : HTTPClient = new HTTPClient();
    try {
	    http.setRequestHeader('Content-Type','text/xml');
	    //http.setRequestHeader('Authorization',oauthHeader);
	    logDebug("Continuity Service URL :"+serviceURL);
	    //http.open('POST', serviceURL);
	    // Logger.info("Shipping Freq XML =" + shippFreqXML);
	    // Send XML data
	    // http.send(shippFreqXML);
	    http = callMWAPI(http, "GET", serviceURL); 
	}
	catch (e)
	{
		Logger.error(e);
	}

  	// Capture response
	var response : String = http.text;
	var errorResponse : String = http.errorText;
	var responseXML : XML = null;
	var errorContainer : Array = [];
	var error = null;
	var status:String=null;
	
	
	logInfo("Continuity Info API response = "+ response);
	logInfo("Continuity Info API errorResponse = "+ errorResponse);	

   
	/****
	* Handle error responses
	* Empty response (no XML) or non-empty error response
	****/
	
	if( !empty(errorResponse) ) {
		response = errorResponse;
	}
	
	if( !empty(response) ) {		
	   
	   // var response1= response.replace("^[&]*", "&#38;");
	    var realStart : Number = response.indexOf('<customerResponse>');
	    responseXML = new XML(response.substring(realStart));
	    
	   
		var continuityObj:Object=null;
        status = responseXML.status.toString();
	      if(status == 200){
		        var continuityXML: XML =responseXML;
		        var ns2: Namespace = new Namespace(continuityXML.namespace());
		        
		        continuityObj=new Object();
		        var continuityInfoXML = continuityXML.ns2::responseData.ns2::continuityInfo.ns2::nextShipment;
		        
		         	var nextShipp: Object= new Object();
		         	nextShipp['kitName']=continuityInfoXML.ns2::kitName.toString();
		         	nextShipp['status']=continuityInfoXML.ns2::status.toString();
		         	nextShipp['shipDate']=continuityInfoXML.ns2::shipDate.toString();
		         	nextShipp['itemNum']=continuityInfoXML.ns2::productNum.toString();
		        
			    continuityObj['nextShipp']=nextShipp;
		    
		        var continuityInfoXML1 = continuityXML.ns2::responseData.ns2::continuityInfo.ns2::lastShipment;
		        
		         	var lastShipp: Object= new Object();
		         	lastShipp['kitName']=continuityInfoXML1.ns2::title.toString();
		         	lastShipp['status']=continuityInfoXML1.ns2::status.toString();
		         	lastShipp['shipDate']=continuityInfoXML1.ns2::shipDate.toString();
		         	lastShipp['itemNum']=continuityInfoXML1.ns2::productNum.toString();
		         	lastShipp['trackingNo']=0;
		         	lastShipp['trackingNo']=continuityInfoXML1.ns2::shipmentTracking.ns2::trackingNum.toString();
		         	lastShipp['trackingUrl']=continuityInfoXML1.ns2::shipmentTracking.ns2::trackingUrl.toString();
		         	
			     continuityObj['lastShipp']=lastShipp;
				 continuityObj['freq']=continuityXML.ns2::responseData.ns2::continuityInfo.ns2::weeksBetweenShipments.toString();
				 args.continuityObj=continuityObj;
				 
	      }else {   getErrorResponse (responseXML);//Call for error handling
	    
			/*	var errorcode = responseXML.errorData.error.code;
				var errormsg = responseXML.errorData.error.message+" :"+responseXML.errorData.error.field+" = "+responseXML.errorData.error.value;
				error = {	"code":errorcode,
							"message":errormsg						
						};
				errorContainer.push(error); */
			}	
     }
    
    args.statusMessage = status;
	args.ErrorContainer=errorContainer;
    return PIPELET_NEXT;
}
function getContinuityServiceURL(mwid : String, brand : String, uid : String, trans: String) {
	//baseURL="https://mw-web-dev3.grdev.com/customer/continuity-info/mwid/15/brand/PA/uid/VHgNyZ/trans/12233445514";
	var baseURL : String = Site.current.getCustomPreferenceValue("middlewareAPIURL");
	baseURL= baseURL + "/customer/continuity-info/mwid/"+ mwid +"/brand/"+ brand+"/uid/"+ uid +"/trans/"+trans ;
	return baseURL;
}
