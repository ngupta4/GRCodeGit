/**
*	 @input profileForm : dw.web.Form
*    @input Request : dw.system.Request
*	 @input sessionId : String
*	 @input ipAddress : String
*    @output status : String 
*    @output mwid : String
*    @output member : Boolean
*	 @output responseXML : XML
*	 @output CustomerStatus : String
*	 @output customerStatusCode : String
*	 @output CustomerSegment : String
*/
importPackage( dw.io );
importPackage( dw.web );
importPackage( dw.system );
importPackage( dw.net );

importScript('grmiddleware/libGRMiddleware.ds');
importScript('common/libUtils.ds');

function execute( args : PipelineDictionary ) : Number
{
	try {
	logInfo ("Entering  CustomerOnlineRegistration.ds");
	var profileForm : Form = args.profileForm;
	var details = null;
	if(!empty(profileForm.customer.accountNumber) && profileForm.customer.accountNumber.value!=null){
		details = true;	
	}else{
		details = false;
	}
 	//details = true;	
	// Build the order XML for the service to consume
	var xmlWriter : StringWriter = new StringWriter();
	createRequestXML(xmlWriter, profileForm, args.sessionId, args.ipAddress);
	var registrationXML : String = xmlWriter.toString();  
	
	// Figure out service URL
    var request:Request = args.Request;
    var uid:String = getCustomerUID(request);
	var serviceURL : String = getServiceURL(uid, details);
	logDebug ("Registration URL :"+serviceURL);
	logDebug ("Registration request XML =" + registrationXML);
	
	 // Call GR Service
	 var http : HTTPClient = new HTTPClient();
	 http.setRequestHeader('Content-Type','text/xml');
	 http = callMWAPI(http, "POST", serviceURL,registrationXML); 
			
	 // Capture response
	var response : String = http.text;
	var errorResponse : String = http.errorText;
	var responseXML : XML = null;
		
	if( !empty(errorResponse) ) {
		response = errorResponse;
	}

	responseXML = new XML(response);
	
	if( !empty(response) ) {
	
		var status = responseXML.status.toString();
		args.status = status;
		if(status == '200'){
			
			if(null!=responseXML.responseData.customer.ffc.customerSegment.toString()){
				args.CustomerSegment = responseXML.responseData.customer.ffc.customerSegment.toString();
			}
			
			
			if(responseXML.responseData.onlineRegistration.member.toString()=="true")
			{
				args.member= true;
			}
			else{
				args.member= false;
			}
			args.mwid = responseXML.responseData.onlineRegistration.mwid.toString();
			if(details == true){
				args.responseXML = responseXML;
				
				if(null!=responseXML.responseData.customer.ffc.customerStatus.toString())
			{
				args.CustomerStatus = responseXML.responseData.customer.ffc.customerStatus.toString();
			}
			if(null!=responseXML.responseData.customer.ffc.customerStatusCode.toString())
			{
				args.customerStatusCode = responseXML.responseData.customer.ffc.customerStatusCode.toString();
			}
				
			}
		}else {
			getErrorResponse(responseXML);
		}
	}else {
		getErrorResponse(responseXML);
	}
	logInfo ("Exiting  CustomerOnlineRegistration.ds");
    return PIPELET_NEXT;
	}catch(e){
		logError (e);
		return PIPELET_ERROR;
	}
}

function getServiceURL( uid : String,details: String) {
	logInfo ("Entering  getServiceURL function");
	//https://grws.grdev.com/customer/online-registration/details/true/brand/PA/uid/VHgNyZ/trans/12233445514
	var baseURL : String = Site.current.getCustomPreferenceValue("middlewareAPIURL");
	//baseURL="https://mw-web-dev3.grdev.com";
	var brand : String= Site.current.getCustomPreferenceValue("GRMProductLine");
	baseURL= baseURL + "/customer/online-registration/details/"+ details +"/brand/"+brand+"/uid/"+ uid +"/trans/"+getTransactionID();	
	return baseURL
	logInfo ("Exiting  getServiceURL function");
}


function createRequestXML (xmlWriter : Writer, profileForm : Form, sessionId:String, ipAddress : String) {
	// Write XML header to file
	logInfo ("Entering  createRequestXML function");
	var mpgm : String = profileForm.customer.mpgm.value;
	var phone : String = profileForm.customer.phone.value;
	//if(!dw.system.Site.getCurrent().preferences.custom.OldAPI){
	if(null!= phone){
		var v1= phone.substr(0,3);
		var v2= phone.substr(3,3);
		var v3= phone.substr(6,4);	
		phone = v1 + '-' + v2 + '-' + v3;
	}
	//}
	
	xmlWriter.write('<customerRequest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="customerOnlineRegistrationRequest_0-1.xsd"> \n');
	xmlWriter.write('	<clientId>Demandware</clientId>\n');
	xmlWriter.write('	<sessionData>\n');
	xmlWriter.write('		<sessionId><![CDATA['+sessionId+']]></sessionId>\n');
	xmlWriter.write('		<ipAddress><![CDATA['+ipAddress+']]></ipAddress>\n');
	xmlWriter.write('	</sessionData>\n');
	xmlWriter.write('	<onlineRegistration>\n');
	xmlWriter.write('		<firstName><![CDATA['+profileForm.customer.firstname.value+']]></firstName>\n');
	xmlWriter.write('      	<lastName><![CDATA['+profileForm.customer.lastname.value+']]></lastName>\n');
	xmlWriter.write('      	<email><![CDATA['+profileForm.customer.email.value+']]></email>\n');
	xmlWriter.write('      	<password><![CDATA['+encryptPassword(profileForm.login.password.value)+']]></password>\n');
	xmlWriter.write('      	<accountMpgmCode><![CDATA['+ mpgm +']]></accountMpgmCode>\n');
	if(profileForm.customer.accountNumber.value!=null){	
	xmlWriter.write('      	<accountNum><![CDATA['+profileForm.customer.accountNumber.value +']]></accountNum>\n');
	}
	xmlWriter.write('      	<billingPostalCode><![CDATA['+profileForm.customer.billingZipCode.value+']]></billingPostalCode>\n');
	if(profileForm.customer.phone.value!=null){	
	xmlWriter.write('		<phones>\n');
	xmlWriter.write('      		<dayPhone><![CDATA['+phone+']]></dayPhone>\n');
	xmlWriter.write('		</phones>\n');
	}
	xmlWriter.write('	</onlineRegistration>\n');
	//addRegistrationInfo( xmlWriter, profileForm );
	
	xmlWriter.write('</customerRequest>\n');
	
	logInfo ("Exiting  createRequestXML function");
}
