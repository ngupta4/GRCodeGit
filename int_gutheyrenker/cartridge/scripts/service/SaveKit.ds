/**
*  Web service call to update the Kit 
*
*   @input mwid : String
*   @input products : Array
*   @input customerSegment : String
*  	@input Request : dw.system.Request
*	@input sessionId : String
*	@input ipAddress : String
*	@input customer : dw.customer.Customer
*   @output status : String
*
*/
importPackage( dw.io );
importPackage( dw.web );
importPackage( dw.system );
importPackage( dw.net );

importScript('grmiddleware/libGRMiddleware.ds');
importScript('common/libUtils.ds');

function execute( args : PipelineDictionary ) : Number
{
	logInfo ("Entering  SaveKit.ds");
	//Check if products are more than equal to 2 in kit.
	if(null!=args.products && args.products.length>=2)
	{
		// Create request XML
			var xmlWriter : StringWriter = new StringWriter();
			createRequestXML(xmlWriter, args.products, args.sessionId, args.ipAddress, args.customerSegment);
			Logger.debug("otherCustomerSegment: " + args.customerSegment);
			var KitXML : String = xmlWriter.toString();
			var uid:String;
			if(null!=args.customer && 'profile' in args.customer)
			{
				var customObject : dw.object.CustomObject = dw.object.CustomObjectMgr.getCustomObject("updateKitCustomer", args.customer.profile.email);
				uid = customObject.custom.UID;
			}else{
				uid = getCustomerUID(request);
			}   
			
			var request:Request = args.Request;
		    
		  	var transactionID = getTransactionID();
		  	
		  	//Create URL
		  	var serviceURL : String = getServiceURL(args.mwid, uid, transactionID);
		  	logDebug ("mwid :"+args.mwid +"uid : "+ uid+"transactionID : "+ transactionID);
			logDebug ("CustomerShippingAddress api URL :"+serviceURL);
			logDebug ("Kit request XML =" + KitXML);
			 // Call GR Service
			var http : HTTPClient = new HTTPClient();
			http.setRequestHeader('Content-Type','text/xml');
		    http = callMWAPI(http, "PUT", serviceURL,KitXML);
		    
		  	//Parse Reaponse
			var response : String = http.text;
			var errorResponse : String = http.errorText;
			var responseXML : XML = null;
			
			if( !empty(errorResponse) ) {
				response = errorResponse;
			}
			responseXML = new XML(response);
			
			if( !empty(responseXML) ) 
			{
				var status = responseXML.status.toString();
				args.status = status;
				if(status == '200'){
					// success 
				}else {
					getErrorResponse(responseXML);
				}
			}else {
					getErrorResponse(responseXML);
			}
	}else{
		logError("Customer with MWID = "+args.mwid+" is having less than two products in Kit. So API Request is not made");
	}
	logInfo ("Exiting  CustomerShippingAddress.ds");
  	
    return PIPELET_NEXT;
}

function createRequestXML (xmlWriter : Writer, products : Array, sessionId:String, ipAddress : String, customerSegment : String) {
	logInfo ("Entering  createRequestXML function");
	Logger.debug("customerSegment: "+ customerSegment);

	xmlWriter.write('<?xml version="1.0" encoding="UTF-8"?>\n');
	xmlWriter.write('<customerRequest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="customerKitCustomizerRequest_0-1.xsd">\n');
	xmlWriter.write('	<clientId>Demandware</clientId>\n');
	xmlWriter.write('	<sessionData>\n');
	xmlWriter.write('		<sessionId><![CDATA['+sessionId+']]></sessionId>\n');
	xmlWriter.write('		<ipAddress><![CDATA['+ipAddress+']]></ipAddress>\n');
	xmlWriter.write('	</sessionData>\n');
	xmlWriter.write('	<kitCustomizer>\n');
	xmlWriter.write('		<customerSegment><![CDATA['+customerSegment+']]></customerSegment>\n');
	xmlWriter.write('			<kitProducts>\n');	
	for(var i=0; i<products.length; i++)
	{
		xmlWriter.write('		<productNum><![CDATA['+products[i]+']]></productNum>\n');
	}
	xmlWriter.write('			</kitProducts>\n');
	xmlWriter.write('	</kitCustomizer>\n');	
	xmlWriter.write('</customerRequest>\n');
	logInfo ("Exiting  createRequestXML function");
}

function getServiceURL(mwid : String, uid : String, trans: String) {
	//https://grws.grdev.com/customer/kit-customizer/mwid/<mwid>/brand/<brandId>/uid/<uid>/trans/<transactionID>
	var baseURL : String = Site.current.getCustomPreferenceValue("middlewareAPIURL");
	var brand : String= Site.current.getCustomPreferenceValue("GRMProductLine");
	baseURL= baseURL + "/customer/kit-customizer/mwid/"+ mwid +"/brand/"+brand+"/uid/"+ uid +"/trans/"+trans ;
	return baseURL;
}
