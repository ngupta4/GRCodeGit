/**
*
*   @input Request : dw.system.Request
*   @input oldpassword : String
*   @input newpasssword : String
*   @input sessionId : String
*   @input ipAddress : String
*   @input mwid : String
*   @output status : String
*
*/
importPackage( dw.io );
importPackage( dw.web );
importPackage( dw.system );
importPackage( dw.net );

importScript('grmiddleware/libGRMiddleware.ds');
importScript('common/libUtils.ds');
function execute( args : PipelineDictionary ) : Number
{
	try{
	logInfo ("Entering  PasswordReset.ds");
	//############### Build the Request XML for the service to consume ####################

	var xmlWriter : StringWriter = new StringWriter();
	xmlWriter.write('<?xml version="1.0" encoding="UTF-8"?>');
	xmlWriter.write('<customerRequest xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="customerPasswordRequest_0-1.xsd">');
	xmlWriter.write('	<clientId>Demandware</clientId>\n');
	xmlWriter.write('	<sessionData>\n');
	xmlWriter.write('		<sessionId><![CDATA['+args.sessionId+']]></sessionId>\n');
	xmlWriter.write('		<ipAddress><![CDATA['+args.ipAddress+']]></ipAddress>\n');
	xmlWriter.write('		<cartId><![CDATA[1]]></cartId>\n');
	xmlWriter.write('	</sessionData>\n');
	xmlWriter.write('	<changePassword>\n');
	xmlWriter.write('		<password><![CDATA['+encryptPassword(args.oldpassword)+']]></password>\n');
	xmlWriter.write('		<newPassword><![CDATA['+encryptPassword(args.newpasssword)+']]></newPassword>\n');
	xmlWriter.write('	</changePassword>\n');
	xmlWriter.write('</customerRequest>');
	var passwordRequestXML : String = xmlWriter.toString(); 
	
	//Get UID
	var request:Request = args.Request;
    var uid:String = getCustomerUID(request);
    // Figure out service URL
	var serviceURL : String = getServiceURL(args.mwid, uid);
	logDebug ("ChangePassword URL :"+serviceURL);
	logDebug ("ChangePassword request XML =" + passwordRequestXML);
	
	// Call GR Service
	 var http : HTTPClient = new HTTPClient();
	 http.setRequestHeader('Content-Type','text/xml');
	 http = callMWAPI(http, "PUT", serviceURL, passwordRequestXML); 
		
	 // Capture response
	var response : String = http.text;
	var errorResponse : String = http.errorText;
	var responseXML : XML = null;

	if( !empty(errorResponse) ) {
		response = errorResponse;
	}

	responseXML = new XML(response);
	
	if( !empty(response) ) {
		var status = responseXML.status.toString();
		args.status = status;
		if(status == '200'){
			//successful reset
		}else {
			getErrorResponse(responseXML);
		}
	}
	//In case service is down, this will show time out error
	if(empty(response) && empty(errorResponse)){
	getErrorResponse(responseXML);
	}
	logInfo ("Exiting  PasswordReset.ds");
   return PIPELET_NEXT;
   }catch(e){
		logError (e);
		return PIPELET_ERROR;
	}
}

function getServiceURL(mwid : String, uid : String) {
	//https://grws.grdev.com/customer/password/mwid/343/brand/PA/uid/VHgNyZ/trans/12233445514
	var baseURL : String = Site.current.getCustomPreferenceValue("middlewareAPIURL");
	var brandID= Site.current.getCustomPreferenceValue("GRMProductLine");
	baseURL= baseURL + "/customer/password/mwid/"+ mwid +"/brand/"+brandID+"/uid/"+ uid +"/trans/"+getTransactionID() ;	
	return baseURL
}