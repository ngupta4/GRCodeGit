/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*	@input ExportFile : String  Export file path. This path is relative to the 'src' subdirectory within the top-level IMPEX directory.
*	@output Status	: dw.system.Status
*
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.io );
importPackage( dw.order );

importScript("int_gutheyrenker:common/libCrypt.ds");

function execute( args : PipelineDictionary ) : Number
{
	var startdate : Number = new Date().getTime();
	
	var ccKey : String = Site.getCurrent().getCustomPreferenceValue("grCCEncryptionKey");
	var encryptionStyle : String = null;
	if( empty(ccKey) ) {
		encryptionStyle = 'single';
	} else {
		encryptionStyle = 'double';	
	}
	
	Logger.getLogger("simplefeeds").debug("EncryptOrderExportFile: Start"); 
	var exportFile : String = args.ExportFile;
	if (empty(exportFile)){
		trace("EncryptOrderExportFile: Parameter ExportFile empty");
		Logger.getLogger("simplefeeds").error( "EncryptOrderExportFile: Parameter ExportFile empty" );
		args.Status = new Status(Status.ERROR,"IMPEX-100");
		return PIPELET_ERROR;
	}
	
	try {
		encryptOrderFile( exportFile, encryptionStyle );
	}
	catch(e) {
		trace("EncryptOrderExportFile: Could not encrypt Order XML file "+File.IMPEX + File.SEPARATOR +"src"+ File.SEPARATOR + exportFile);
		Logger.getLogger("simplefeeds").fatal("EncryptOrderExportFile: Could not encrypt Order XML file "+File.IMPEX + File.SEPARATOR +"src"+ File.SEPARATOR + exportFile);
		var enddate : Number = new Date().getTime();
		Logger.getLogger("simplefeeds").error("EncryptOrderExportFile: Export Runtime:"+(startdate-enddate)/1000+"s");
		args.Status = new Status(Status.ERROR,"IMPEX-130");
		return PIPELET_ERROR;
	}
	
	var enddate : Number = new Date().getTime();
	Logger.getLogger("simplefeeds").debug("EncryptOrderExportFile: Export Runtime:"+(startdate-enddate)/1000+"s");
	Logger.getLogger("simplefeeds").debug("EncryptOrderExportFile: End");
	args.Status = new Status(Status.OK,"IMPEX-0","OK");
	return PIPELET_NEXT;
}
