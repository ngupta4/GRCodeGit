<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="SendData">
    <segment>
      <node>
        <start-node name="SendData" secure="false"/>
        <node-display x="1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Service-RTSCheck"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <transition target-connector="in2" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="CurrentSession.custom.rtsToken" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="RTS/GetDefaultPaymentOptions.ds"/>
                <key-binding alias="scriptLog" key="ScriptLog"/>
                <key-binding alias="PayOption" key="PaymentOptions"/>
                <key-binding alias="ApplicablePaymentCards" key="PaymentMethods"/>
                <key-binding alias="true" key="errorOccured"/>
                <key-binding alias="showCC" key="showCC"/>
                <key-binding alias="showEC" key="showEC"/>
                <key-binding alias="showPL" key="showPL"/>
                <key-binding alias="showPP" key="showPP"/>
                <key-binding alias="PayOption" key="payoption"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="1" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="PayOption" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                      <key-binding alias="Resource.msg('rtsService.creditCard.name','configuration',null)" key="From_0"/>
                    </pipelet-node>
                    <node-display orientation="horizontal" x="1" y="0"/>
                  </node>
                  <transition target-connector="in3" target-path="../+1">
                    <transition-display>
                      <bend-point relative-to="source" x="1" y="0"/>
                      <bend-point relative-to="source" x="1" y="2"/>
                    </transition-display>
                  </transition>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="-1" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="RTS/SetPaymentOptionsToSession.ds"/>
                <key-binding alias="scriptLog" key="ScriptLog"/>
                <key-binding alias="PayOption" key="PaymentOptions"/>
                <key-binding alias="ApplicablePaymentCards" key="PaymentMethods"/>
                <key-binding alias="true" key="errorOccured"/>
                <key-binding alias="showCC" key="showCC"/>
                <key-binding alias="showEC" key="showEC"/>
                <key-binding alias="showPL" key="showPL"/>
                <key-binding alias="showPP" key="showPP"/>
                <key-binding alias="PayOption" key="payoption"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in2" target-path="./+1"/>
              </branch>
            </node>
            <transition target-connector="in1" target-path="./+1"/>
          </segment>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="false" name="RTS/rtsjson"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
        <branch basename="b3" source-connector="success">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="RTS/ProcessRTS.ds"/>
                <key-binding alias="ScriptLog" key="ScriptLog"/>
                <key-binding alias="DisplayPopUp" key="displayPopUp"/>
                <key-binding alias="Group" key="group"/>
                <key-binding alias="PayOption" key="payoption"/>
                <key-binding alias="ScreenLevel" key="screenLevel"/>
                <key-binding alias="Token" key="token"/>
                <key-binding alias="x" key="DisplayPopUp"/>
                <key-binding alias="y" key="Group"/>
                <key-binding alias="z" key="ScreenLevel"/>
                <key-binding alias="a" key="Token"/>
                <key-binding alias="responseXML" key="sourceXML"/>
                <key-binding alias="test" key="test"/>
                <key-binding alias="showPopUp" key="showPopUp"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../b2.2"/>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="Token" key="From_0"/>
                <key-binding alias="CurrentSession.custom.rtsToken" key="To_0"/>
                <key-binding alias="showPopUp" key="From_1"/>
                <key-binding alias="CurrentSession.custom.showPopUp" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="2"/>
            </node>
            <transition target-connector="in1" target-path="../b2.4"/>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_2">
    <segment>
      <node>
        <text-node>
          <description>RTSCheck will return error if customer does not qualify for PayLater</description>
        </text-node>
        <node-display x="3" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_3">
    <segment>
      <node>
        <text-node>
          <description>Once data is succesfully returned from RTS ,here the payment options, token, screenlevel of customer is extracted from responseXml and set in pdict</description>
        </text-node>
        <node-display x="0" y="3"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_4">
    <segment>
      <node>
        <text-node>
          <description>If RTSCheck returns error,default payment option is set in this script again if error occurs in this script then only credit card is set as payment option in the assign node.</description>
        </text-node>
        <node-display x="4" y="4"/>
      </node>
    </segment>
  </branch>
</pipeline>
