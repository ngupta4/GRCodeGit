<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline type="view">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>This pipeline is responsible for rendering and validating captcha images.</description>
        </text-node>
        <node-display x="2" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="Start">
    <segment>
      <node>
        <start-node call-mode="private" name="Start" secure="false">
          <description>This is responsible for captcha images.</description>
        </start-node>
        <node-display x="3" y="0"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="empty(CurrentHttpParameterMap.recaptcha_challenge_field)&amp;&amp;empty(CurrentHttpParameterMap.recaptcha_response_field)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in1" target-path="./b4.1">
            <transition-display>
              <bend-point relative-to="target" x="-2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="true"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="captcha/validateCaptcha.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="CurrentHttpParameterMap.recaptcha_challenge_field.value" key="Challenge"/>
          <key-binding alias="CurrentHttpParameterMap.recaptcha_response_field.value" key="Response"/>
          <key-binding alias="CurrentRequest.httpRemoteAddress" key="IP"/>
          <key-binding alias="StatusMessage" key="StatusMessage"/>
          <key-binding alias="Status" key="Status"/>
          <key-binding alias="Success" key="Success"/>
          <key-binding alias="CaptchaSuccess" key="CaptchaSuccess"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in2" target-path="./+1"/>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CaptchaSuccess&gt;=0" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b4" source-connector="yes">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <end-node name="success"/>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="0"/>
      </node>
      <simple-transition/>
      <node>
        <end-node name="error"/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
</pipeline>
