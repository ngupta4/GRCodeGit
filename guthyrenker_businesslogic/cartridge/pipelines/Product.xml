<?xml version="1.0" encoding="UTF-8" ?>
<?demandware-pipeline version="2.0"?>

<pipeline group="Catalog">
  <branch basename="_ANONYMOUS_BRANCH_1">
    <segment>
      <node>
        <text-node>
          <description>Renders a full product detail page. If the http parameter &quot;format&quot; is set to &quot;json&quot; the product details are rendered as JSON response.</description>
        </text-node>
        <node-display width="2" x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Show">
    <segment>
      <node>
        <start-node name="Show" secure="false"/>
        <node-display x="1" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="&quot;Product-Show&quot;" key="From_0"/>
          <key-binding alias="TargetPipeline" key="To_0"/>
          <key-binding alias="CurrentRequest.getHttpQueryString()" key="From_1"/>
          <key-binding alias="TargetPipelineParams" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="CurrentCustomer.authenticated || CurrentSession.custom.cRememberMe" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="0" y="1"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <call-node start-name-ref="Product-GetProduct"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="UpdatePageMetaData" pipelet-set-identifier="bc_api">
                <key-binding alias="null" key="Category"/>
                <key-binding alias="null" key="Content"/>
                <key-binding alias="null" key="Folder"/>
                <key-binding alias="Product.shortDescription != null ? Product.shortDescription.getMarkup() : &quot;&quot;" key="DefaultDescription"/>
                <key-binding alias="Product.name" key="DefaultKeywords"/>
                <key-binding alias="Product.name + &quot; - &quot; + dw.system.Site.getCurrent().name" key="DefaultTitle"/>
                <key-binding alias="Product" key="Product"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="Product.template == null" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <call-node start-name-ref="Search-GetProductResult"/>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="Paging" pipelet-set-identifier="bc_api">
                      <config-property key="DefaultPageSize" value="12"/>
                      <key-binding alias="ProductSearchResult.productSearchHits" key="Objects"/>
                      <key-binding alias="3" key="PageSize"/>
                      <key-binding alias="CurrentHttpParameterMap.start.intValue - 2" key="Start"/>
                      <key-binding alias="ProductSearchResult.count" key="ObjectsCount"/>
                      <key-binding alias="ProductPagingModel" key="PagingModel"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <interaction-node transaction-required="false">
                      <template buffered="true" dynamic="true" name="CurrentSession.custom.renderingTemplatePath + &quot;product/product&quot;"/>
                    </interaction-node>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="true" name="CurrentSession.custom.renderingTemplatePath + Product.template"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <jump-node start-name-ref="Account-RequireLogin"/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_3">
    <segment>
      <node>
        <text-node>
          <description>Determines a product based on the given ID.</description>
        </text-node>
        <node-display x="4" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_4">
    <segment>
      <node>
        <text-node>
          <description>Returns product variants data as a JSON. Called via product.js (loadVariation).
Input:
pid (required) - product ID</description>
        </text-node>
        <node-display width="2" x="7" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetProduct">
    <segment>
      <node>
        <start-node call-mode="private" name="GetProduct" secure="false"/>
        <node-display x="4" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <decision-node condition-key="CurrentHttpParameterMap.pid.stringValue" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="GetProduct" pipelet-set-identifier="bc_api">
                <key-binding alias="CurrentHttpParameterMap.pid.stringValue" key="ProductID"/>
                <key-binding alias="Product" key="Product"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="error">
                <transition target-connector="in1" target-path="../+1"/>
              </branch>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="!empty(Product) &amp;&amp; Product.getAvailabilityModel().isInStock()" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b3" source-connector="yes">
                <transition target-connector="in"/>
                <segment>
                  <node>
                    <decision-node condition-key="Product.productSet" condition-operator="expr"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="yes">
                      <transition target-connector="in"/>
                      <segment>
                        <node>
                          <call-node start-name-ref="Product-HandleOfflineSetProducts"/>
                          <node-display x="0" y="1"/>
                          <branch basename="b2" source-connector="online">
                            <transition target-connector="in1" target-path="../+2"/>
                          </branch>
                        </node>
                        <transition target-connector="in1" target-path="../../../+2"/>
                      </segment>
                    </branch>
                  </node>
                  <transition target-connector="in1" target-path="./+1">
                    <transition-display>
                      <bend-point relative-to="source" x="4" y="0"/>
                    </transition-display>
                  </transition>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="2" y="2"/>
                  </node>
                  <transition target-connector="in3" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="-2" y="0"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="UpdateProductVariationSelections" pipelet-set-identifier="bc_api">
                      <key-binding alias="CurrentVariationModel" key="ProductVariationModel"/>
                      <key-binding alias="null" key="CustomFormPrefix"/>
                      <key-binding alias="Product" key="Product"/>
                      <key-binding alias="Product" key="SelectedProduct"/>
                      <key-binding alias="ProductVariationModels" key="ProductVariationModels"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="UpdateProductOptionSelections" pipelet-set-identifier="bc_api">
                      <key-binding alias="Product" key="Product"/>
                      <key-binding alias="CurrentOptionModel" key="ProductOptionModel"/>
                      <key-binding alias="null" key="CustomFormPrefix"/>
                      <key-binding alias="ProductOptionModels" key="ProductOptionModels"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <end-node name="ok"/>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="in1" target-path="../+1">
              <transition-display>
                <bend-point relative-to="source" x="2" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="1" y="1"/>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="3"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="true" name="CurrentSession.custom.renderingTemplatePath + &quot;error/productnotfound.isml&quot;"/>
        </interaction-node>
        <node-display x="0" y="4"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetVariants">
    <segment>
      <node>
        <start-node name="GetVariants" secure="false"/>
        <node-display x="7" y="2"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/components/variationsjson"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_7">
    <segment>
      <node>
        <text-node>
          <description>Returns product availability data as a JSON object. Called via product.js (reloadAvailability).
Input:
pid (required) - product ID
quantity (required) - the quantity to use for determining avalability</description>
        </text-node>
        <node-display width="2" x="11" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="Offer">
    <segment>
      <node>
        <start-node name="Offer" secure="false"/>
        <node-display x="9" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="dw.catalog.ProductMgr.getProduct(CurrentHttpParameterMap.pid.stringValue)" key="From_0"/>
          <key-binding alias="Product" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="true" name="CurrentSession.custom.renderingTemplatePath + &quot;product/offer&quot;"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetAvailability">
    <segment>
      <node>
        <start-node name="GetAvailability" secure="false"/>
        <node-display x="11" y="2"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="product/components/availabilityupdatejson"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_10">
    <segment>
      <node>
        <text-node>
          <description>Determine if at least there is 1 online SetProduct in case it is s Product Set. if all of the Set Products are offline then we return not found view.</description>
        </text-node>
        <node-display height="2" x="3" y="5"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_11">
    <segment>
      <node>
        <text-node>
          <description>If http search parameters are passed to the detail page, a search is triggered to render the prev/next and the refinement navigation.</description>
        </text-node>
        <node-display height="2" x="0" y="7"/>
      </node>
    </segment>
  </branch>
  <branch basename="HandleOfflineSetProducts">
    <segment>
      <node>
        <start-node call-mode="private" name="HandleOfflineSetProducts" secure="false"/>
        <node-display x="7" y="5"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="false" key="From_0"/>
          <key-binding alias="Online" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <loop-node element-key="SetProduct" iterator-key="Product.getProductSetProducts()"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="do">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="SetProduct.online" key="From_0"/>
                <key-binding alias="Online" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <decision-node condition-key="Online" condition-operator="expr"/>
              <node-display orientation="horizontal" x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                    <bend-point relative-to="target" x="0" y="-1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <end-node name="online"/>
                    <node-display x="1" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <transition target-connector="loop" target-path="..">
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
                <bend-point relative-to="source" x="-1" y="1"/>
                <bend-point relative-to="target" x="-1" y="0"/>
              </transition-display>
            </transition>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display x="1" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_13">
    <segment>
      <node>
        <text-node>
          <description>Returns true if at least one SetProduct is online otherwise false i.e. when all SetProducts are offline.
Expects Product instance</description>
        </text-node>
        <node-display height="2" x="9" y="5"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_14">
    <segment>
      <node>
        <text-node>
          <description>Renders the product detail page within the context of a category.</description>
        </text-node>
        <node-display x="1" y="13"/>
      </node>
    </segment>
  </branch>
  <branch basename="ShowInCategory">
    <segment>
      <node>
        <start-node name="ShowInCategory" secure="false"/>
        <node-display x="1" y="14"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <jump-node start-name-ref="Product-Show"/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_16">
    <segment>
      <node>
        <text-node>
          <description>Renders the last visisted products based on the session information.</description>
        </text-node>
        <node-display x="4" y="13"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_17">
    <segment>
      <node>
        <text-node>
          <description>Formats given prices into money based on site setting.
Http Param:
salePrice, standardPrice
Returns:
formatted prices as json</description>
        </text-node>
        <node-display width="2" x="6" y="13"/>
      </node>
    </segment>
  </branch>
  <branch basename="IncludeLastVisited">
    <segment>
      <node>
        <start-node name="IncludeLastVisited" secure="false"/>
        <node-display x="4" y="14"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="GetLastVisitedProducts" pipelet-set-identifier="bc_api">
          <key-binding alias="3" key="MaxLength"/>
          <key-binding alias="LastVisitedProducts" key="Products"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="true" name="CurrentSession.custom.renderingTemplatePath + &quot;product/lastvisited&quot;"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="FormatPrices">
    <segment>
      <node>
        <start-node name="FormatPrices" secure="false"/>
        <node-display x="7" y="14"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="false" name="util/formatprices"/>
        </interaction-node>
        <node-display x="0" y="2"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_20">
    <segment>
      <node>
        <text-node>
          <description>Renders the recommended product for a product on PDP page based on recommendation type set in BM.</description>
        </text-node>
        <node-display x="10" y="13"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetProductRecommendation">
    <segment>
      <node>
        <start-node name="GetProductRecommendation" secure="false"/>
        <node-display x="10" y="14"/>
      </node>
      <simple-transition/>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <description>sets the value for recommendation type and recommendation name, by reading from site preferences.</description>
          <config-property key="Transactional" value="false"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue('StaticProductRecommendationType')" key="From_0"/>
          <key-binding alias="RecommendationType" key="To_0"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue('StaticProductRecommendationName')" key="From_1"/>
          <key-binding alias="RecommendationName" key="To_1"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="ProductsPerRow" key="To_2"/>
          <key-binding alias="4" key="From_2"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="productlist/Recommendations.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="Product" key="Product"/>
          <key-binding alias="RecommendationType" key="RecommendationType"/>
          <key-binding alias="ExplicitRecommendations" key="ExplicitRecommendations"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue('MaxRecommendationsPerProduct')" key="MaxRecommendationsPerProduct"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
            </transition-display>
          </transition>
          <segment>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="true" name="CurrentSession.custom.renderingTemplatePath + &quot;error/notfound&quot;"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="true" name="CurrentSession.custom.renderingTemplatePath + &quot;product/components/recommendations&quot;"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_22">
    <segment>
      <node>
        <text-node>
          <description>Renders the recommended product for products added to the cart by user based on recommendation type set in BM.</description>
        </text-node>
        <node-display x="13" y="13"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetCartRecommendation">
    <segment>
      <node>
        <start-node name="GetCartRecommendation" secure="false"/>
        <node-display x="13" y="14"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="!(CurrentHttpParameterMap.orderID.stringValue)" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <call-node start-name-ref="Cart-GetBasket"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="Basket" key="From_0"/>
                <key-binding alias="LineItemCntr" key="To_0"/>
                <key-binding alias="null" key="From_1"/>
                <key-binding alias="null" key="To_1"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <transition target-connector="in1" target-path="../+1"/>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="2" y="0"/>
          <bend-point relative-to="target" x="0" y="-1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="GetOrder" pipelet-set-identifier="bc_api">
          <key-binding alias="CurrentHttpParameterMap.orderID.stringValue" key="OrderNo"/>
          <key-binding alias="Order" key="Order"/>
        </pipelet-node>
        <node-display x="1" y="1"/>
        <branch basename="b3" source-connector="error">
          <transition target-connector="in2" target-path="./+1/b2.1">
            <transition-display>
              <bend-point relative-to="source" x="1" y="0"/>
              <bend-point relative-to="target" x="1" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="Order" key="From_0"/>
          <key-binding alias="LineItemCntr" key="To_0"/>
          <key-binding alias="null" key="From_1"/>
          <key-binding alias="null" key="To_1"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <transition target-connector="in3" target-path="./+1">
        <transition-display>
          <bend-point relative-to="source" x="0" y="2"/>
        </transition-display>
      </transition>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="-1" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <description>sets the value for recommendation type and recommendation name, by reading from site preferences.</description>
          <config-property key="Transactional" value="false"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue('StaticProductRecommendationType')" key="From_0"/>
          <key-binding alias="RecommendationType" key="To_0"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue('StaticProductRecommendationName')" key="From_1"/>
          <key-binding alias="RecommendationName" key="To_1"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
          <key-binding alias="ProductsPerRow" key="To_2"/>
          <key-binding alias="4" key="From_2"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cart/GetExplicitRecommendationsForCart.ds"/>
          <key-binding alias="null" key="ScriptLog"/>
          <key-binding alias="Product" key="Product"/>
          <key-binding alias="RecommendationType" key="RecommendationType"/>
          <key-binding alias="ExplicitRecommendations" key="ExplicitRecommendations"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue('MaxRecommendationsPerCart')" key="MaxNoRecommendations"/>
          <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue('MaxRecommendationsPerProduct')" key="MaxRecommendationsPerProduct"/>
          <key-binding alias="LineItemCntr" key="LineItemCtnr"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1"/>
          <segment>
            <node>
              <join-node/>
              <node-display x="1" y="0"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="1" y="0"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="true" name="CurrentSession.custom.renderingTemplatePath + &quot;error/notfound&quot;"/>
              </interaction-node>
              <node-display orientation="horizontal" x="1" y="0"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="true" name="CurrentSession.custom.renderingTemplatePath + &quot;product/components/recommendations&quot;"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_24">
    <segment>
      <node>
        <text-node>
          <description>If call is from cart page then condition will return true. Otherwise if call is from checkout this condition will be false.</description>
        </text-node>
        <node-display x="12" y="15"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_25">
    <segment>
      <node>
        <text-node>
          <description>Pipeline will be called when user upgrades to upsell modal.this pipeline removes the product added to cart before upsell and add the combo product to cart.</description>
        </text-node>
        <node-display x="18" y="13"/>
      </node>
    </segment>
  </branch>
  <branch basename="UpdateCartAfterUpsell">
    <segment>
      <node>
        <start-node name="UpdateCartAfterUpsell" secure="false"/>
        <node-display x="18" y="14"/>
      </node>
      <simple-transition/>
      <node>
        <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <key-binding alias="CurrentHttpParameterMap.recommendedID.stringValue" key="From_0"/>
          <key-binding alias="ProductID" key="To_0"/>
          <key-binding alias="null" key="From_2"/>
          <key-binding alias="null" key="To_2"/>
          <key-binding alias="null" key="From_3"/>
          <key-binding alias="null" key="To_3"/>
          <key-binding alias="null" key="From_4"/>
          <key-binding alias="null" key="To_4"/>
          <key-binding alias="null" key="From_5"/>
          <key-binding alias="null" key="To_5"/>
          <key-binding alias="null" key="From_6"/>
          <key-binding alias="null" key="To_6"/>
          <key-binding alias="null" key="From_7"/>
          <key-binding alias="null" key="To_7"/>
          <key-binding alias="null" key="From_8"/>
          <key-binding alias="null" key="To_8"/>
          <key-binding alias="null" key="From_9"/>
          <key-binding alias="null" key="To_9"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <decision-node condition-key="Product.custom.isAKitFlag" condition-operator="expr"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="yes">
          <transition target-connector="in"/>
          <segment>
            <node>
              <call-node start-name-ref="Cart-AddProductToBasket"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <call-node start-name-ref="Cart-Calculate"/>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="true" name="CurrentSession.custom.renderingTemplatePath + &quot;checkout/cart/minicart&quot;"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="1" y="0"/>
        </transition-display>
      </simple-transition>
      <node>
        <end-node/>
        <node-display orientation="horizontal" x="1" y="0"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_27">
    <segment>
      <node>
        <text-node>
          <description>Pipeline for rendering upsell recommendation isml.</description>
        </text-node>
        <node-display x="21" y="13"/>
      </node>
    </segment>
  </branch>
  <branch basename="UpSellRecommendation">
    <segment>
      <node>
        <start-node name="UpSellRecommendation" secure="false"/>
        <node-display x="21" y="14"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Product-GetProduct"/>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="ok">
          <transition target-connector="in"/>
          <segment>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <description>sets the value for recommendation type and recommendation name, by reading from site preferences.</description>
                <config-property key="Transactional" value="false"/>
                <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue('UpsellRecommendationType')" key="From_0"/>
                <key-binding alias="RecommendationType" key="To_0"/>
                <key-binding alias="dw.system.Site.getCurrent().getCustomPreferenceValue('UpsellRecommendationName')" key="From_1"/>
                <key-binding alias="RecommendationName" key="To_1"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition/>
            <node>
              <decision-node condition-key="false" condition-operator="expr"/>
              <node-display x="0" y="1"/>
              <branch basename="b2" source-connector="yes">
                <transition target-connector="in">
                  <transition-display>
                    <bend-point relative-to="source" x="0" y="1"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="Product" key="From_0"/>
                      <key-binding alias="ExplicitRecommendation" key="To_0"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <decision-node condition-key="!CurrentCustomer.authenticated &amp;&amp; CurrentSession.custom.cRememberMe" condition-operator="expr"/>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="yes">
                      <transition target-connector="in">
                        <transition-display>
                          <bend-point relative-to="source" x="0" y="1"/>
                        </transition-display>
                      </transition>
                      <segment>
                        <node>
                          <pipelet-node pipelet-name="GetCustomer" pipelet-set-identifier="bc_api">
                            <key-binding alias="CurrentSession.custom.cEmailId" key="Login"/>
                            <key-binding alias="KitCustomer" key="Customer"/>
                          </pipelet-node>
                          <node-display x="0" y="1"/>
                          <branch basename="b2" source-connector="error">
                            <transition target-connector="in"/>
                            <segment>
                              <node>
                                <end-node/>
                                <node-display orientation="horizontal" x="-1" y="0"/>
                              </node>
                            </segment>
                          </branch>
                        </node>
                        <transition target-connector="in1" target-path="../+1"/>
                      </segment>
                    </branch>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <key-binding alias="CurrentCustomer" key="From_0"/>
                      <key-binding alias="KitCustomer" key="To_0"/>
                      <key-binding alias="null" key="From_1"/>
                      <key-binding alias="null" key="To_1"/>
                      <key-binding alias="null" key="From_2"/>
                      <key-binding alias="null" key="To_2"/>
                      <key-binding alias="null" key="From_3"/>
                      <key-binding alias="null" key="To_3"/>
                      <key-binding alias="null" key="From_4"/>
                      <key-binding alias="null" key="To_4"/>
                      <key-binding alias="null" key="From_5"/>
                      <key-binding alias="null" key="To_5"/>
                      <key-binding alias="null" key="From_6"/>
                      <key-binding alias="null" key="To_6"/>
                      <key-binding alias="null" key="From_7"/>
                      <key-binding alias="null" key="To_7"/>
                      <key-binding alias="null" key="From_8"/>
                      <key-binding alias="null" key="To_8"/>
                      <key-binding alias="null" key="From_9"/>
                      <key-binding alias="null" key="To_9"/>
                    </pipelet-node>
                    <node-display x="1" y="1"/>
                  </node>
                  <transition target-connector="in2" target-path="./+1"/>
                </segment>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="-1" y="1"/>
                  </node>
                  <simple-transition/>
                  <node>
                    <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                      <config-property key="Transactional" value="false"/>
                      <config-property key="OnError" value="PIPELET_ERROR"/>
                      <config-property key="ScriptFile" value="KitCustomizer/PrepareKit.ds"/>
                      <key-binding alias="null" key="ScriptLog"/>
                      <key-binding alias="KitCustomer.profile.custom.kitProducts" key="KitProducts"/>
                      <key-binding alias="pids" key="pids"/>
                    </pipelet-node>
                    <node-display x="0" y="1"/>
                    <branch basename="b2" source-connector="error">
                      <transition target-connector="in" target-path="../b3.1">
                        <transition-display>
                          <bend-point relative-to="target" x="0" y="-2"/>
                        </transition-display>
                      </transition>
                    </branch>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="source" x="0" y="1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <interaction-node transaction-required="false">
                      <template buffered="true" dynamic="true" name="CurrentSession.custom.renderingTemplatePath + &quot;checkout/upsellrecommendationperproduct&quot;"/>
                    </interaction-node>
                    <node-display x="0" y="1"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="4" y="0"/>
                <bend-point relative-to="target" x="0" y="-1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <config-property key="OnError" value="PIPELET_ERROR"/>
                <config-property key="ScriptFile" value="productlist/Recommendations.ds"/>
                <key-binding alias="null" key="ScriptLog"/>
                <key-binding alias="Product" key="Product"/>
                <key-binding alias="RecommendationType" key="RecommendationType"/>
                <key-binding alias="ExplicitRecommendations" key="ExplicitRecommendations"/>
                <key-binding alias="1" key="MaxRecommendationsPerProduct"/>
              </pipelet-node>
              <node-display x="2" y="2"/>
              <branch basename="b3" source-connector="error">
                <transition target-connector="in2">
                  <transition-display>
                    <bend-point relative-to="source" x="2" y="0"/>
                  </transition-display>
                </transition>
                <segment>
                  <node>
                    <join-node/>
                    <node-display x="1" y="2"/>
                  </node>
                  <simple-transition>
                    <transition-display>
                      <bend-point relative-to="target" x="0" y="-1"/>
                    </transition-display>
                  </simple-transition>
                  <node>
                    <end-node/>
                    <node-display x="0" y="2"/>
                  </node>
                </segment>
              </branch>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <pipelet-node pipelet-name="Assign" pipelet-set-identifier="bc_api">
                <config-property key="Transactional" value="false"/>
                <key-binding alias="ExplicitRecommendations[0]" key="From_0"/>
                <key-binding alias="ExplicitRecommendation" key="To_0"/>
                <key-binding alias="null" key="From_2"/>
                <key-binding alias="null" key="To_2"/>
                <key-binding alias="null" key="From_3"/>
                <key-binding alias="null" key="To_3"/>
                <key-binding alias="null" key="From_4"/>
                <key-binding alias="null" key="To_4"/>
                <key-binding alias="null" key="From_5"/>
                <key-binding alias="null" key="To_5"/>
                <key-binding alias="null" key="From_6"/>
                <key-binding alias="null" key="To_6"/>
                <key-binding alias="null" key="From_7"/>
                <key-binding alias="null" key="To_7"/>
                <key-binding alias="null" key="From_8"/>
                <key-binding alias="null" key="To_8"/>
                <key-binding alias="null" key="From_9"/>
                <key-binding alias="null" key="To_9"/>
              </pipelet-node>
              <node-display x="0" y="1"/>
            </node>
            <simple-transition>
              <transition-display>
                <bend-point relative-to="source" x="0" y="1"/>
              </transition-display>
            </simple-transition>
            <node>
              <interaction-node transaction-required="false">
                <template buffered="true" dynamic="true" name="CurrentSession.custom.renderingTemplatePath + &quot;checkout/upsellrecommendationperproduct&quot;"/>
              </interaction-node>
              <node-display x="0" y="1"/>
            </node>
          </segment>
        </branch>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_29">
    <segment>
      <node>
        <text-node>
          <description>Renders a list of bonus products for a bonus discount line item.</description>
        </text-node>
        <node-display x="1" y="17"/>
      </node>
    </segment>
  </branch>
  <branch basename="GetBonusProducts">
    <segment>
      <node>
        <start-node name="GetBonusProducts" secure="false"/>
        <node-display x="1" y="18"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <call-node start-name-ref="Cart-GetBasket"/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="Script" pipelet-set-identifier="bc_api">
          <config-property key="Transactional" value="false"/>
          <config-property key="OnError" value="PIPELET_ERROR"/>
          <config-property key="ScriptFile" value="cart/GetBonusDiscountLineItem.ds"/>
          <key-binding alias="BonusDiscountLineItem" key="BonusDiscountLineItem"/>
          <key-binding alias="CurrentHttpParameterMap.bonusDiscountLineItemUUID.stringValue" key="uuid"/>
          <key-binding alias="Basket.bonusDiscountLineItems" key="BonusDiscountLineItems"/>
          <key-binding alias="ScriptLog" key="ScriptLog"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <interaction-node transaction-required="false">
          <template buffered="true" dynamic="true" name="CurrentSession.custom.renderingTemplatePath + &quot;product/bonusproductgrid&quot;"/>
        </interaction-node>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="AddBonusProduct">
    <segment>
      <node>
        <start-node name="AddBonusProduct" secure="false"/>
        <node-display x="4" y="17"/>
      </node>
      <simple-transition>
        <transition-display>
          <bend-point relative-to="source" x="0" y="1"/>
        </transition-display>
      </simple-transition>
      <node>
        <pipelet-node pipelet-name="AddBonusProductToBasket" pipelet-set-identifier="bc_api">
          <key-binding alias="Basket" key="Basket"/>
          <key-binding alias="BonusDiscountLineItem" key="BonusDiscountLineItem"/>
          <key-binding alias="Product" key="Product"/>
          <key-binding alias="Quantity" key="Quantity"/>
          <key-binding alias="null" key="ProductOptionModel"/>
          <key-binding alias="null" key="ProductLineItem"/>
        </pipelet-node>
        <node-display x="0" y="1"/>
        <branch basename="b2" source-connector="error">
          <transition target-connector="in1" target-path="./+1">
            <transition-display>
              <bend-point relative-to="source" x="2" y="0"/>
              <bend-point relative-to="target" x="2" y="0"/>
            </transition-display>
          </transition>
        </branch>
      </node>
      <transition target-connector="in1" target-path="./+1"/>
    </segment>
    <segment>
      <node>
        <join-node/>
        <node-display x="0" y="1"/>
      </node>
      <simple-transition/>
      <node>
        <end-node/>
        <node-display x="0" y="1"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_32">
    <segment>
      <node>
        <text-node>
          <description>This script get the list of recommended product, which will be shown on Product Detail Page.</description>
        </text-node>
        <node-display x="9" y="17"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_33">
    <segment>
      <node>
        <text-node>
          <description>This script get the list of recommended product, which will be shown on checkout cart Page.</description>
        </text-node>
        <node-display x="12" y="17"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_34">
    <segment>
      <node>
        <text-node>
          <description>If product is to be added to kit, then that code will be handled in isml only.</description>
        </text-node>
        <node-display x="17" y="16"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_35">
    <segment>
      <node>
        <text-node>
          <description>As per business requirement upsell will not be shown for add to kit. So this condition is set to false. In future if this functionality is needed then kit condition to be put here.</description>
        </text-node>
        <node-display x="20" y="17"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_36">
    <segment>
      <node>
        <text-node>
          <description>Removed condition of isakit, as now only recommendation is checked.</description>
        </text-node>
        <node-display x="24" y="17"/>
      </node>
    </segment>
  </branch>
  <branch basename="_ANONYMOUS_BRANCH_37">
    <segment>
      <node>
        <text-node>
          <description>if product can be added to kit then all kit products will be got and displayed to user.</description>
        </text-node>
        <node-display x="20" y="22"/>
      </node>
    </segment>
  </branch>
</pipeline>
