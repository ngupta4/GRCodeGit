/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*	GetCustomerCreditCard.ds
 * 	Finds the credit card with the given UUID in the given customer payment instruments.
 * 	If the credit card was not found, PIPELET_ERROR is returned.
 *
 * 	@input CustomerPaymentInstruments : dw.util.Collection the payment instruments to search
 * 	@output CreditCardPaymentInstrument : dw.customer.CustomerPaymentInstrument the payment instrument with the given UUID
 */
importPackage( dw.customer );
importPackage( dw.system );
importPackage( dw.util );
importScript('int_gutheyrenker:common/libUtils.ds'); 


function execute( pdict : PipelineDictionary ) : Number
{
	logDebug("Start of GetCustomerContinuityCreditCard.ds");
	var instruments : Collection = pdict.CustomerPaymentInstruments;
	var creditCardInstrument : dw.customer.CustomerPaymentInstrument = null;
	
	// find credit card in payment instruments
	var instrumentsIter : Iterator = instruments.iterator();
	while( instrumentsIter.hasNext() )
	{
		creditCardInstrument = instrumentsIter.next();
		if( creditCardInstrument.custom.isDefaultCreditCard )
		{
			pdict.CreditCardPaymentInstrument = creditCardInstrument;
			break;
		}
	}
	logDebug("End of GetCustomerContinuityCreditCard.ds");
    return PIPELET_NEXT;
}
