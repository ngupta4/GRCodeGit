/**
*   Demandware Script File
*   To define input and output parameters, create entries of the form:
*	GetCustomerCreditCard.ds
 * 	Finds the credit card with the given UUID in the given customer payment instruments.
 * 	If the credit card was not found, PIPELET_ERROR is returned.
 *	This script is used for the Add and Edit of the credit card functionality
 *
 * 	@input CreditCardUUID : String UUID of the credit card payment instrument to find
 * 	@input CustomerPaymentInstruments : dw.util.Collection the payment instruments to search
 */
importPackage( dw.customer );
importPackage( dw.system );
importPackage( dw.util );
importScript('int_gutheyrenker:common/libUtils.ds'); 


function execute( pdict : PipelineDictionary ) : Number {
	logInfo("Start of UpdateContinuityCreditCard.ds");
	var uuid : String = pdict.CreditCardUUID;
	var instruments : Collection = pdict.CustomerPaymentInstruments;
	var creditCardInstrument : dw.customer.CustomerPaymentInstrument = null;

	// Ensure mandatory parameter in pipeline dictionary and collection is not empty
	if( uuid == null || (instruments == null && instruments.size() < 1) )
	{
		logDebug("Error occured in file UpdateContinuityCreditCard.ds, uuid or instruments are null or empty ");
		return PIPELET_ERROR;
	}
	
	
	/*
	* This while loop looks for the available credit cards and 
	* change the continuity status to true or false	
	*/
	var instrumentsIter : Iterator = instruments.iterator();
	while( instrumentsIter.hasNext() )
	{
		creditCardInstrument = instrumentsIter.next();
		creditCardInstrument.custom.isDefaultCreditCard=false;
	}
	logInfo("End of UpdateContinuityCreditCard.ds");
    return PIPELET_NEXT;
}
