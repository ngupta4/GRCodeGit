/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input Basket : dw.order.Basket
*   @input pid : String
*   @input pQty : Number
*   @input methodType : String
*   @output addProduct : Number
*   @output newPQty : Number
*
*/
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.util );
importPackage( dw.catalog );

function execute( args : PipelineDictionary ) : Number
{
	
	var productKeys = args.Basket.productQuantities.keySet();
	var productKeysIt = productKeys.iterator();
	var addProduct = 1;
	args.newPQty = args.pQty;
	Logger.debug("Quantity : " + args.pQty);
	var i = 0;
	var pBasketQty : Number = 0;
		while(productKeysIt.hasNext()) {
			var pkey = productKeysIt.next();
			if (pkey.ID == args.pid) {
				var pnum = args.Basket.productQuantities.get(productKeys[i]);
				pBasketQty = pnum;
				Logger.debug("hmm: " + pkey.custom.maxQty + " " + pnum);
				if (args.methodType == "add") {	
					if (pnum >= pkey.custom.maxQty) {
						addProduct = 0;
					} else if ((args.pQty+pnum) > pkey.custom.maxQty) {
						args.newPQty = args.pQty - ((args.pQty+pnum)-pkey.custom.maxQty);
						Logger.debug("hmmQty: " + args.newPQty);				
					}
					else {
						args.newPQty = args.pQty;
					}
				}
			}
			i++;
		}
   args.addProduct = addProduct;

   return PIPELET_NEXT;
}
