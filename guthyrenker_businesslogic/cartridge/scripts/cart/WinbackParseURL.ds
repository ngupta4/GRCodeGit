/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input Parameters : dw.web.HttpParameterMap CurrentHttpParameterMap.
*   @input Basket : dw.order.Basket Basket to record the winback account number.
*   @output Action : String Action to do after
*	@output CurrentCampaignConfig : Object current campaign configuration 
*	@output Pid : String Io set in pdict
*	@output DoNotSearchByUCI : Boolean for campaign search 
*
*/
importPackage( dw.system );
importPackage( dw.catalog );
importPackage( dw.util );
importPackage( dw.object );

importScript('guthyrenker_core:common/libUtils.ds');
importScript('int_gutheyrenker:grmiddleware/libGRMiddleware.ds');
var log : Log = Logger.getLogger("guthyrenker_businesslogic:cart.WinbackParseURL.ds");

function execute( args : PipelineDictionary ) : Number
{
	log.debug("Enter");
	var parameters : dw.web.HttpParameterMap = args.Parameters,
		campain : CustomObject = null,
		currentProduct : Product = null;
		
		// default action show empty  cart
		args.Action = 'Home-Show';
		// check if campain in URL and it exists, it winback campain and active 
		var campainCode : String = parameters.get('campaign').stringValue;
		log.debug("campaignCode="+campainCode);
		if( campainCode && (campain = getCampaignForCampaignCode(campainCode)) && campain.custom['winback'] && campain.custom['active'] ){
			log.debug("Campain found");
			//setting CurrentCampaignConfig, it also saves campaign to session, got from code inspection
			args.CurrentCampaignConfig = getCurrentCampaignConfig(campain.custom['campaignCode'],campain.custom['uciCode']);
			log.debug("CampaignConfig found");
			//if any of (acct|zip) missed don't show customer info
			if(checkKeyAcctZip(args.Parameters)){
				// WB1 p6.ii show empty cart and later pre-populated customer information
				session.privacy.wbShowCustomerInformation = true;
				log.debug("Setting winback account number");
				if( 'winbackAccountNumber' in args.Basket.custom ) {
					args.Basket.custom.winbackAccountNumber = parameters.get('acct').stringValue;
					log.debug("After Setting winback account number");
				}
			}
			log.debug("after finding customer profile");	
			//check for "NEW" parameter
			var currentProduct : Product = (parameters.get('new').stringValue)?ProductMgr.getProduct(parameters.get('new').stringValue):null;
			if(!currentProduct && !parameters.get('new').stringValue){
				args.Pid = (args.CurrentCampaignConfig.getDefaultCoreOffer()).ID;
			}else if(currentProduct){
				//if such product exists in catalog, WB1 p6.i and WB1 p6.v
				args.Pid = currentProduct.ID;
			}
			log.debug("Pid="+args.Pid);
			//we must call COCart-AddProduct?pid={currentProduct.ID}
			args.Action = 'COCart-AddProduct';
		}else{
			log.debug("no campaign found");
			//if campaign does not exists
			clearCampaign();			
			if( 'wbShowCustomerInformation' in session.privacy && !empty(session.privacy.wbShowCustomerInformation) ) {
				delete session.privacy.wbShowCustomerInformation;
			}			
			log.debug("throwing Error!");
			throw Error;	
		}
		args.DoNotSearchByUCI = true;
	return PIPELET_NEXT;
}

function checkKeyAcctZip(parameters : dw.web.HttpParameterMap) : Boolean 
{
	var key : String, acct : String, zip : String, cc : Number; 
	try{
		//normalize values
		acct  = parameters.get('acct').stringValue.replace(/[^0-9]+/,'');
		zip  = parameters.get('zip').stringValue.replace(/[^0-9]+/,'');
	}catch(e){
		//if we got exception - then Map.get  method returned null
		return false;
	}
	
	var cc  = parameters.get('cc').intValue;
	
	if( acct.length && zip.length == 5){
		// find Customer with such number
		//let profile = dw.customer.CustomerMgr.getProfile(acct);
		
		var profile : XML = getAPI().getCustomerInfo(acct, true);	
		if(profile && checkCustomer(profile, cc, zip)){
			//we found such profile else profile is null			
			return true; 
		}
			
	}
	return false;
}

function checkCustomer(customerProfile : XML, cc : Number, zip: String) : Boolean
{
	var status : Boolean = false;
	//CustomerInfo MW API call returns customerProfile.customerStatus, should we check it here 'Inactive'
	if(!empty(customerProfile) /* && customerProfile.customerStatus == 'Active'*/){
		//it is customer from MW		
		session.privacy.wbCustomerInfo = customerProfile;
		if(customerProfile.addresses.billingAddress.zipCode == zip || customerProfile.addresses.shippingAddress.zipCode == zip){
			status = true;		
		}else{
			//else we don't have user's zip code
			status = false;
		}
		if(cc !== 1 && session.privacy.wbShowCCinfo !== false ){
		//do not show credit card information in pre-populated fields WB1 p.19
			session.privacy.wbShowCCinfo = true;
		}		
	}
	
	return status;
}
