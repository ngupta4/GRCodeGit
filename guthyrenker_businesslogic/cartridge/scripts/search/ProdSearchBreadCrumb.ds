/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-   @input ExampleIn : String This is a sample comment.
*-   @output ExampleOut : Number
*
*/
importPackage( dw.system );

function getProdSearchPath( productSearchResult : PipelineDictionary ) : dw.util.ArrayList
{
		var path = new dw.util.ArrayList();
		if( null != productSearchResult){
			var productSearchResult:ProductSearchResult = productSearchResult;
			var cat = productSearchResult.category;
			
			while( cat.parent != null)
			{
				if(	cat.ID == dw.web.Resource.msg('searchbreadcrumbs.producttype','search',null) ||
					cat.ID == dw.web.Resource.msg('search.solutionfinder','search',null) ||	
					cat.parent.ID == dw.web.Resource.msg('searchbreadcrumbs.retention','search',null) || 
						cat.parent.ID == dw.web.Resource.msg('searchbreadcrumbs.root','search',null)){
						break;
				}
				if( cat.online ) path.addAt( 0, cat );
				cat = cat.parent;
				
			}
			
		}
   return path;
}


function getPriceRefinementDefinition( productSearchResult : PipelineDictionary) : String
{
	// for price refinements, we use the display value of the price refinement definition's value
		var breadcrumbLabel = null;
		if( null != productSearchResult){
			var productSearchResult : ProductSearchResult = productSearchResult;
			var refinements = pdict.ProductSearchResult.refinements;
			var prdValues = refinements.getRefinementValues(refinements.priceRefinementDefinition);
			if(prdValues.iterator().hasNext())
			{
				breadcrumbLabel = prdValues.iterator().next().getDisplayValue();
			}
		}
	return breadcrumbLabel;
}


