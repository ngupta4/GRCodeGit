/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*    @input currentSession : dw.system.Session
*    @input isRememberMe : Boolean
*    @input firstName: String
*    @input lastName : String
*    @input email : String
*    @input brand : String
*    @input showsplash : String
*
*/
importPackage( dw.system );
importPackage( dw.web );
importPackage(dw.object );
importPackage( dw.customer );
importScript('int_gutheyrenker:common/libUtils.ds'); 

function execute( args : PipelineDictionary ) : Number
{
	logInfo("Start of CreateRememberMeCookie.ds");
	importScript('int_gutheyrenker:common/libUtils.ds'); 
	var domain:String = Site.current.getCustomPreferenceValue("GRCookiesDomain");
	var preferences : CustomAttributes = 60*60*24*30;//dw.system.Site.getCurrent().preferences.custom.Credential_Cookies_Age;
	
	if(args.isRememberMe){
		// age of cookies set to 30 days
		var jsonval = getJSONString(args);
		//encodeURIComponent(args.firstName+' '+args.lastName+':'+args.email)
		var showsplashstring : String = "";
		showsplashstring = (null!=args.showsplash && !empty(args.showsplash))?":"+args.showsplash:"";
	   	var remberCookie:Cookie=new Cookie("rememberMe",encodeURIComponent(args.firstName+' '+args.lastName+':'+args.email+':'+args.brand+showsplashstring));
		remberCookie.setMaxAge(preferences);
		remberCookie.setDomain(domain);
		remberCookie.setPath("/"); 
		request.addHttpCookie(remberCookie);
		
		var sharedCookie:Cookie=new Cookie("sharedsession",jsonval);
		sharedCookie.setMaxAge(preferences);
		sharedCookie.setDomain(domain);
		sharedCookie.setPath("/"); 
		request.addHttpCookie(sharedCookie);
		
		args.currentSession.custom.cRememberMe=true;
		args.currentSession.custom.cFirstName=args.firstName;
		args.currentSession.custom.cLastName=args.lastName;
		args.currentSession.custom.cEmailId=args.email;
		args.currentSession.custom.cBrand=args.brand;
		args.currentSession.custom.cshowsplash = args.showsplash;
	}else{
		var showsplashstring : String = "";
		showsplashstring = (null!=args.showsplash && !empty(args.showsplash))?":"+args.showsplash:"";
		var remberCookie:Cookie=new Cookie("rememberMe",encodeURIComponent(args.firstName+' '+args.lastName+':'+args.email+':'+args.brand+showsplashstring));
		remberCookie.setMaxAge(0);
		remberCookie.setDomain(domain);
		remberCookie.setPath("/"); 
		request.addHttpCookie(remberCookie);
		
		args.currentSession.custom.cRememberMe=null;
		args.currentSession.custom.cFirstName=null;
		args.currentSession.custom.cLastName=null;
		args.currentSession.custom.cEmailId=null;
		args.currentSession.custom.cBrand=null;
		args.currentSession.custom.cshowsplash =null;
	}
	
	var loginCookie:Cookie=new Cookie("loggedin","1");
	loginCookie.setMaxAge(preferences);
	loginCookie.setDomain(domain);
	loginCookie.setPath("/"); 
	request.addHttpCookie(loginCookie);
	
	

	logInfo("End of execution of CreateRememberMeCookie.ds");
	return PIPELET_NEXT;
}

function getJSONString(args : PipelineDictionary){
		var jsonStr='';
		var responseJson='';
	 	responseJson += '"firstName" : ';
	    responseJson += '"'+ args.firstName +'"';
	    responseJson += ',';
    	responseJson += '"lastName" : ';    	
	    responseJson += '"'+args.lastName+'"';
	    responseJson += ',';
	    responseJson += '"email" : ';
	    responseJson += '"'+args.email+'"';
	    responseJson += ',';
	    responseJson += '"brand" : ';
	    responseJson += '"'+args.brand+'"';
	    responseJson += ',';
	    responseJson += '"showSplash" : ';
	    responseJson += '"'+args.showsplash+'"';
	   	jsonStr = JSON.stringify(JSON.parse("{"+responseJson+"}"));
	   	//encoding the string and it needs to de decode on the isml for extracting the values
	   	jsonStr = encodeURIComponent(jsonStr);
	   	return jsonStr;
}