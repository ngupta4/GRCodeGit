/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*    @input currentSession : dw.system.Session
*/
importPackage( dw.system );
importPackage( dw.web );
importPackage(dw.object );
importPackage( dw.customer );
importScript('int_gutheyrenker:common/libUtils.ds');

function execute( args : PipelineDictionary ) : Number
{
	logInfo("Start of CookieHandlerOnLogout.ds");
    var domain:String = Site.current.getCustomPreferenceValue("GRCookiesDomain");
	deleteCookie("rememberMe", domain);
	deleteCookie("soft", domain);
	deleteCookie("brand", domain);
	deleteCookie("sharedsession", domain);
	deleteCookie("loggedin", domain);
	deleteCookie("showKitWarningPopup", domain);
	deleteCookie("vciCallCookie", domain);
	//clear the session elements
	args.currentSession.custom.cRememberMe=null;
	args.currentSession.custom.cFirstName=null;
	args.currentSession.custom.cLastName=null;
	args.currentSession.custom.cEmailId=null;
	
	var loginCookie:Cookie=new Cookie("loggedin","0");
	// setting the max age to 30 days
	loginCookie.setMaxAge(-1);
	loginCookie.setDomain(domain);
	loginCookie.setPath("/"); 
	request.addHttpCookie(loginCookie);
	logInfo("End of execution of CookieHandlerOnLogout.ds");
	
	
	return PIPELET_NEXT;
}
function deleteCookie(cookieName : String, domainName : String) { 				
		var removeCookie:Cookie = new Cookie(cookieName, "");
        removeCookie.setMaxAge(0);
        removeCookie.setPath("/");
      	removeCookie.setDomain(domainName);
        request.addHttpCookie(removeCookie);
}