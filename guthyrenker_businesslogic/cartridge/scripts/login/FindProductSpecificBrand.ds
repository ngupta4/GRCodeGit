/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*    @input Order : dw.order.Order
*    @output ProductLineBrand : String
*    @output ShowSplash : String
*
*/
importPackage( dw.system );
importPackage( dw.catalog );
importPackage( dw.web );
importPackage( dw.order );
importPackage( dw.util );

function execute( pdict : PipelineDictionary ) : Number
{	

	var order : dw.order.Order = pdict.Order;
	var itr : dw.util.Iterator = order.getAllProductLineItems().iterator();
	var product : Product;
	while(itr.hasNext()) {
		product = itr.next().product;
		if(product.custom.coreItem == true) {
			break;
		}
	}
	var ProductLineBrand : String = findProductBrand(product,Resource.msg('acq.default.segment','configuration','2'));
	var splashsegments : String = Resource.msg('product.splash.segmentlist','configuration',null);
	if(product != null && product.custom.productLine != null && !empty(product.custom.productLine)) {
		var prodsegment = product.custom.productLine;
		if(splashsegments.indexOf(prodsegment) >= 0) {
			pdict.ShowSplash = "true";
			}
		}
	pdict.ProductLineBrand = ProductLineBrand;

   return PIPELET_NEXT;
}

function findProductBrand(pid : Product,defaultSegment : String) : String
{
	var product : dw.catalog.Product = pid;
	var ProductLineBrand : String = "";
	var segment : String = ","+product.custom.productLine+",";
	var segment1 : String = Resource.msg('product.productline.segment1list','configuration',null);
	var segment2 : String = Resource.msg('product.productline.segment2list','configuration',null);
	
	if(!(product != null && product.custom.productLine != null && !empty(product.custom.productLine))){
		segment = ","+defaultSegment+",";
	}

	if(segment1.indexOf(segment) >= 0) {
		ProductLineBrand = Resource.msg('product.productline.brand.segment1','configuration',null);
	}
	else if(segment2.indexOf(segment) >= 0) {
		ProductLineBrand = Resource.msg('product.productline.brand.segment2','configuration',null);
	}

	return ProductLineBrand;
}

function getDefaultSegment(pid : Product) : String
{
	var currentBrand : String = Resource.msg('current.site.brand','configuration',null);
	var segment : String = "";
	var product : dw.catalog.Product = pid;
	if(!(product != null && product.custom.productLine != null && !empty(product.custom.productLine))){
		if(currentBrand.equals(Resource.msg('product.productline.brand.segment1','configuration',null))){
			segment = Resource.msg('cmm.default.segment1','configuration','0');
		}
		else if(currentBrand.equals(Resource.msg('product.productline.brand.segment2','configuration',null))){
			segment = Resource.msg('cmm.default.segment2','configuration','3');
		}
	}
	else{
		segment = product.custom.productLine;
	}
	
	return segment;
}

function isSameBrand(pid : Product) : Boolean
{
	var segment : String = "";
	var product : dw.catalog.Product = pid;
	segment = getDefaultSegment(product);
	var productBrand : String = findProductBrand(pid,segment);
	var isSameBrand : Boolean = true;
	
	if(null != productBrand && productBrand != Resource.msg('current.site.brand','configuration',null)){
			isSameBrand = false;
		}
	return isSameBrand;
}

function isKitAdditionAllowed(srcProduct : Product):String {
	var productLine = getDefaultSegment(srcProduct);
	var offersegments : String = Resource.msg('product.productline.segment2list','configuration',null);
	offersegments = ","+offersegments+",";
	if(offersegments.indexOf(productLine) >= 0){
		if(session.custom.blockPAPaddition == "true"){
			return false;
		}
	}
	//Following IF Block is to restrict PA product addition in PA+ site.
	if(Resource.msg('current.site.brand','configuration',null) == Resource.msg('blockPAadditionBrand','configuration',null)){
		var PASegments = ","+Resource.msg('segment_blockPAaddition','configuration',null)+",";
		if(PASegments.indexOf(productLine) >= 0){
			return false;
		}
	}
	
	//If Product is 60 Day restrict it's addition
	if(productLine == Resource.msg('productline_PA60Day','configuration',null)){
		return false;
	}
		
	
	return true;
}