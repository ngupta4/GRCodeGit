/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input products : Array
*   @input pID : String 
*	@output ProductArray : Array
*	@output Product : dw.catalog.Product
*	@output errorCode : String
*
*/
importPackage( dw.system );
importScript('int_gutheyrenker:common/libUtils.ds');

function execute( args : PipelineDictionary ) : Number
{
	var deleteProduct : dw.catalog.Product = dw.catalog.ProductMgr.getProduct(args.pID); 
    var tempProductArray :Array = args.products;
    var newArray  : Array = new Array();
    if( !empty( tempProductArray ) ) {
    	var length = tempProductArray.length;
	    var flag : Boolean = false;
	    for(var i =0; i<length; i++)
	    	newArray[i] = tempProductArray[i];
	    for (var i = 0; i < length; i++){		
			var product = tempProductArray[i].split(dw.web.Resource.msg('symbol.kit.split', 'common', null));
			if(product[0] == args.pID){
				flag=true;
				if(i<length-1){
					for (var j=i; j<length-1; j++){
						var temp :Array = newArray[j+1].split(dw.web.Resource.msg('symbol.kit.split', 'common', null));
						newArray[j] = temp[0]+dw.web.Resource.msg('symbol.kit.split', 'common', null)+temp[1]+dw.web.Resource.msg('symbol.kit.split', 'common', null)+(parseInt(temp[2])-1).toFixed();
					}
				}		
				newArray.pop();
				break;
			}
		}
		if(!flag){
			args.errorCode = dw.web.Resource.msg('kit.product.delete.notfound', 'errormessages', null);
		}
		args.ProductArray = newArray;
		args.Product = deleteProduct;
	    return PIPELET_NEXT;
    } else {
		args.errorCode = dw.web.Resource.msg('kit.no.products', 'errormessages', null);
		return PIPELET_ERROR;
    }
}