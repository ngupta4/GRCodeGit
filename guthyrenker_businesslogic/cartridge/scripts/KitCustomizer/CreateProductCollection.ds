/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input pidArray : Array
*   @output productList : dw.util.ArrayList
*   @output upcArray : Array
*   @output errorCode : String
*
*/
importPackage( dw.system );
importPackage( dw.catalog );
importScript('int_gutheyrenker:common/libUtils.ds');
importScript('KitCustomizer/KitUtils.ds');

function execute( args : PipelineDictionary ) : Number
{
	var tempArray : Array = args.pidArray;
	var tempProductList : dw.util.ArrayList = new dw.util.ArrayList();
	var tempUpcArray : Array = new Array();
	if(tempArray != null && !empty(tempArray)){ 
		var length : Number = tempArray.length;
		for(var i=0; i<length; i++){
			var product : Product = ProductMgr.getProduct(tempArray[i]);
			if(product != null){
				var tempProd : Object = createProductObject(product);
				tempProductList.push(tempProd);
				tempUpcArray[i] = product.UPC;
			} else {
				args.errorCode = dw.web.Resource.msg('kit.product.error.msg', 'errormessages', null);
				logError("Product was not found for id : " + tempArray[i]);
				return PIPELET_ERROR;
			}
		}
	}
	args.productList = tempProductList;
	args.upcArray = tempUpcArray;
    return PIPELET_NEXT;
}
