/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input productList : dw.util.ArrayList
*   @input Product : dw.catalog.Product
*   @input addOrDelete : String
*   @output outProductList : dw.util.ArrayList
*   @output index : Number
*
*/
importPackage( dw.system );
importPackage( dw.util );
importScript('int_gutheyrenker:common/libUtils.ds');
importScript('KitCustomizer/KitUtils.ds');

function execute( args : PipelineDictionary ) : Number
{
	var tempProducts : ArrayList = new ArrayList();
	tempProducts = args.productList; 
	var tempProd : Object = createProductObject(args.Product);
	var i = 0;
	
	if(args.addOrDelete == dw.web.Resource.msg('kit.addproduct','account',null)){
		if(tempProd.isCustomizableFlag && tempProd.kitPrice != null)
			tempProducts.push(tempProd);
			args.index = tempProducts.size() - 1;
	} else if(args.addOrDelete == dw.web.Resource.msg('kit.deleteproduct','account',null)){
		var deleteIndex = -1;
		for each (var prodObj in tempProducts){
			if(prodObj.ID == tempProd.ID){
				deleteIndex = i;
				break;
			}
			i++;
		}
		if(deleteIndex >= 0){
			tempProducts.removeAt(deleteIndex);
		} else {
			logError("The product was not found with the id " + tempProd.ID);
			return PIPELET_ERROR;
		}
	}
	
	args.outProductList = tempProducts;  
    return PIPELET_NEXT;
}
