/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input Order : dw.order.Order
*   @output inqSalesProducts  : String
*   @output inqSalesQuantities : String
*   @output inqSalesPrices : String
*   @output inqClientOrderNum : String
*
*/
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.util );
importPackage( dw.catalog );

function execute( pdict : PipelineDictionary ) : Number
{

    var order : Order = pdict.Order;
    var name ;
    var qty ;
    var productId;
    var inqSalesProducts : String = "" ; 
    var inqSalesQuantities : String= "";
    var inqSalesPrices : String = "";
    var inqClientOrderNum  : String = "";
    var productIter : Iterator = order.allProductLineItems.iterator();
    

    while (productIter.hasNext()) {
			var pli : ProductLineItem = productIter.next();
			name = pli.productName;
			productId = pli.productID;
			
			var product : Product = pli.getProduct();

			if (!empty(product) && !empty(product.primaryCategory)) {
				var catList = product.primaryCategory.ID ;
				inqSalesProducts = inqSalesProducts + '\"NAM:'+name+'~ID:'+productId+'~CAT:'+catList+'\",';
			}			
			
			inqSalesQuantities = inqSalesQuantities + pli.quantityValue+",";
			inqSalesPrices = inqSalesPrices +pli.priceValue+","; 
    }
    
    inqSalesProducts = "["+inqSalesProducts+"]";
  	inqSalesQuantities= "["+inqSalesQuantities+"]";
  	inqSalesPrices = "["+inqSalesPrices+"]";
 	inqClientOrderNum  = order.currentOrderNo;
 	
 	pdict.inqSalesProducts = inqSalesProducts;
 	pdict.inqSalesPrices = inqSalesPrices;
 	pdict.inqSalesQuantities = inqSalesQuantities;
 	pdict.inqClientOrderNum = inqClientOrderNum;
 	
   return PIPELET_NEXT;
}
