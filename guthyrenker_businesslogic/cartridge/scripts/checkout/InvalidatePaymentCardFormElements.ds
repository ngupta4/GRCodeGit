/**
 * Invalidates the payment card form element in case specified status is ERROR.
 * If status is undefined or form is invalid the pipelet returns PIPELET_ERROR. 
 *
 *  @input Status : dw.system.Status The status object.
 *  @input CreditCardForm : dw.web.FormGroup The credit card form.
 *	@input Customer : dw.customer.Customer
 *	@input CurrentSession : Object 
 *	@output FormError : String
 */
importPackage( dw.system );
importPackage( dw.order );
importPackage( dw.util );
importPackage( dw.value );
importPackage( dw.web );

function execute( pdict : PipelineDictionary ) : Number
{
	var status : Status = pdict.Status;
	var creditCardForm : FormGroup = pdict.CreditCardForm;
	var customer : dw.customer.Customer = pdict.Customer;
	var cSession = pdict.CurrentSession;
	
	pdict.FormError = "true";
	// verify that we have a status object and a valid credit card form
	if( status == null || !creditCardForm.valid )
	{
		return PIPELET_ERROR;
	}

	// we are fine, if status is OK
	if( status.status == dw.system.Status.OK )
	{
		return PIPELET_NEXT;
	}

	// invalidate the payment card form elements
	var items : Iterator = status.items.iterator();
	while( items.hasNext() )
	{
		var item : StatusItem = items.next();

		switch( item.code )
		{
			case PaymentStatusCodes.CREDITCARD_INVALID_CARD_NUMBER:
				//check to skip error for continuity payment card
				if(customer.authenticated && cSession.custom.selectedCreditCardUUID == customer.profile.custom.defaultCreditCardID)
				{
					pdict.FormError = "false";
				}else{
					creditCardForm.number.invalidateFormElement();
				}
				continue;

			case PaymentStatusCodes.CREDITCARD_INVALID_EXPIRATION_DATE:
				creditCardForm.month.invalidateFormElement();
				creditCardForm.year.invalidateFormElement();
				continue;

			case PaymentStatusCodes.CREDITCARD_INVALID_SECURITY_CODE:
				creditCardForm.cvn.invalidateFormElement();
		}
	}

	return PIPELET_NEXT;
}