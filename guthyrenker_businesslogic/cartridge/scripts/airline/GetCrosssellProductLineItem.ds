/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input basket : dw.order.Basket
*   @input pid : String
*   @output remProdLineItem : dw.order.ProductLineItem
*
*/
importPackage( dw.system );
importPackage( dw.catalog );
importPackage( dw.order );
importPackage( dw.util );

function execute( args : PipelineDictionary ) : Number
{
	var basket : dw.order.Basket = args.basket;
	var pid = args.pid;
	
	var prodLineItems : Iterator = basket.getProductLineItems().iterator();
	var remProdLineItem : ProductLineItem = null;
	var prodLineItem :ProductLineItem = null;
	
	while(prodLineItems.hasNext()){
		prodLineItem = prodLineItems.next();
		if(null != pid){
			if(prodLineItem.productID.equalsIgnoreCase(args.pid)){
				remProdLineItem = prodLineItem;
				break;
			}
		}
	}
	args.remProdLineItem = remProdLineItem;
    // read pipeline dictionary input parameter
    // ... = args.ExampleIn;

    // insert business logic here

    // write pipeline dictionary output parameter

    // args.ExampleOut = ...

   return PIPELET_NEXT;
}
