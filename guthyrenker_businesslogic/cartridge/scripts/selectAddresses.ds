/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input billingAddressID : Object
*   @input shippingAddressID : Object
*   @input changeBillingAddress : Boolean
*   @input changeShippingAddress : Boolean
* 	@input CurrentCustomer : dw.customer.Customer
* 	@input isAddorEditFlag : Boolean
* 	@output newBillingAddressId : String
* 	@output oldBillingAddressId : String
* 	@output newShippingAddressId : String
* 	@output oldShippingAddressId : String
*
*/
importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.customer );


function execute( args : PipelineDictionary ) : Number
{


	var changeBillingAddress : Boolean = args.changeBillingAddress;
	var changeShippingAddress : Boolean = args.changeShippingAddress;
	var arrayBillingID : Object = args.billingAddressID;
	var arrayShippingID : Object = args.shippingAddressID;
	var newbillingaddressid : String;
	var newshippingaddressid : String;
	if(args.isAddorEditFlag==false)
	{
		var ar : Array = arrayBillingID;
		newbillingaddressid= ar.pop();	
		var ar : Array = arrayShippingID;
		newshippingaddressid= ar.pop();
	}else{
		newbillingaddressid= arrayBillingID;
		newshippingaddressid = arrayShippingID;
	}
	
	if(changeBillingAddress == null)
	{
		if(newbillingaddressid.toString().length<=0)
		{
			changeBillingAddress=false;
		}
		else{
			changeBillingAddress=true;
		}
		
	}
	if(changeShippingAddress == null)
	{
		if(newshippingaddressid.toString().length<=0)
		{
			changeShippingAddress=false;
		}else{
			changeShippingAddress=true;
		}	
	}
	
	var customer : Customer = args.CurrentCustomer;
	var addressBook : AddressBook = customer.profile.addressBook;
	var addressList : List = addressBook.addresses;
	var Listlength : Number = addressList.length;
	var customerAddress : CustomerAddress = null;
	
	var oldshippingaddressid : String = null;
	var oldbillingaddressid : String = null;
 
	while (Listlength>0)
	{
	  customerAddress = addressList.pop();
	  
	  if(changeShippingAddress)
	  {
		  if(customerAddress.custom.shippingAddress == true)
		  {
		  	oldshippingaddressid = customerAddress.ID;
		  }
		
	  }
	  else
	  {
		  	oldshippingaddressid=null;
	  }
	  
	  if(changeBillingAddress)
	  {
		  if(customerAddress.custom.billingAddress == true)
		  {
		  	oldbillingaddressid = customerAddress.ID;
		  }
	  }
	  else
	  {
	  	oldbillingaddressid=null;
	  }
	  Listlength--;	
	}

	args.newBillingAddressId=newbillingaddressid;
	args.oldBillingAddressId= oldbillingaddressid;
	args.newShippingAddressId=newshippingaddressid;
	args.oldShippingAddressId=oldshippingaddressid;

   return PIPELET_NEXT;
}
