/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*-	@input mobileDevices : dw.util.Collection
*	@input url : String			- URL to redirect to
*   @output submissionURL : String
*	@output mobileDetected : Boolean
*	@output firstAttempt : Boolean
*/

importPackage( dw.system );
importPackage( dw.util );
importPackage( dw.web );


function execute( args : PipelineDictionary ) : Number
{
	args.mobileDetected = false;
	
	if (!Site.getCurrent().getCustomPreferenceValue("GREnableMobileRedirect")){
		return PIPELET_NEXT;
	}
	
	var devicesStr : String = Site.getCurrent().getCustomPreferenceValue("GRMobileDevices");
	if (empty(devicesStr)) {
		return PIPELET_NEXT;
	}
	
	var mobileDevicesArr : Array = devicesStr.split(",");
	if (mobileDevicesArr.length <= 0) {
		return PIPELET_NEXT;
	}
	
	if (empty(request.httpUserAgent)) {
		return PIPELET_NEXT;
	}
	
	var redirectURL : String;
	
	var forceDesktop : String = !empty(args.CurrentHttpParameterMap.get("forcedesktop"))?args.CurrentHttpParameterMap.forcedesktop.stringValue:"";
	
	var isForceDesktop : Boolean = (!empty(forceDesktop) && (forceDesktop == "true"))?true:false;
	
	if (isForceDesktop) {
		session.custom.showDesktop = true;	
	}
	
	
	var mobileDevices : ArrayList = new ArrayList(mobileDevicesArr);
	// Mobile Devices which forward to mobile version of content asset
	/*mobileDevices.add("iphone");
	mobileDevices.add("zunehd");
	mobileDevices.add("googlebot-mobile");
	mobileDevices.add("android");
	mobileDevices.add("ipod");
	mobileDevices.add("blackberry");
	mobileDevices.add("chrome");*/
	
	var devices : Iterator = mobileDevices.iterator();
	args.mobileDetected = false;
	// check for mobile
	while (devices.hasNext())
	{
		var device = devices.next();
	
		// supported mobile device found if true
		if (request.httpUserAgent.toLowerCase().indexOf(device) != -1)
		{
			//show desktop site and do not redirect if true
			var isShowDesktop : Boolean = !((!('showDesktop' in session.custom) || empty(session.custom.showDesktop) || (session.custom.showDesktop==false)));
			
			//check if already redirected to avoid endless redirect chain
			var isFirstAttempt : Boolean = (!('firstAttempt' in session.custom) || empty(session.custom.firstAttempt) || (session.custom.firstAttempt==false));
			
			if(!empty(Site.current.preferences) && 'isLegacyMobile' in Site.current.preferences.custom && Site.current.preferences.custom.isLegacyMobile){
					isFirstAttempt = true;
			}
			
			
			//check if httpRefrer of currentrequest is mobile page to avoid redirecting background asynchronous calls
			var isRefereMobile : Boolean = (empty(request.httpReferer) || request.httpReferer.indexOf("mHome-Show")==-1);
			
			if(!(isShowDesktop) && isFirstAttempt && isRefereMobile)
			{
				var qString : String = empty(request.httpQueryString)?'':request.httpQueryString;
				if (!empty(qString) && qString.indexOf('?') < 0 && qString.indexOf('/') != 0) {
					qString = '?' + qString;
				}
					redirectURL = Site.getCurrent().getCustomPreferenceValue("GRMobileRedirectUrl")+(qString);//"http://m.proactiv.com"+(empty(request.httpQueryString)?'':request.httpQueryString); //+ args.murl;
					
					args.submissionURL = redirectURL;//encodeURI(redirectURL);
					args.mobileDetected = true;
					args.firstAttempt = true;
					session.custom.firstAttempt = true;
					return PIPELET_NEXT;
			}
			
		}
	}
	return PIPELET_ERROR;
}