<iscomment>
	This template renders a product tile using a product. The following parameters
	must be passed into the template module:
	
	product 		: the product to render the tile for
	showswatches 	: check, whether to render the color swatches (default is false)
	showpricing		: check, whether to render the pricing (default is false)
	showpromotion	: check, whether to render the promotional messaging (default is false)
	showrating		: check, whether to render the review rating (default is false)
</iscomment>

<iscomment>set the product for local reuse</iscomment>
<isset name="Product" value="${pdict.product}" scope="page"/>

<iscomment>set default values</iscomment>
<isset name="showswatches" value="${false}" scope="page"/>
<isif condition="${pdict.showswatches != null}">
	<isset name="showswatches" value="${pdict.showswatches}" scope="page"/>
</isif>
<isset name="showpricing" value="${false}" scope="page"/>
<isif condition="${pdict.showpricing != null}">
	<isset name="showpricing" value="${pdict.showpricing}" scope="page"/>
</isif>
<isset name="showpromotion" value="${false}" scope="page"/>
<isif condition="${pdict.showpromotion != null}">
	<isset name="showpromotion" value="${pdict.showpromotion}" scope="page"/>
</isif>
<isset name="showrating" value="${false}" scope="page"/>
<isif condition="${pdict.showrating != null}">
	<isset name="showrating" value="${pdict.showrating}" scope="page"/>
</isif>

<isif condition="${!empty(Product)}">

	<iscomment>
		Get the colors selectable from the current product master.
	</iscomment>
	<isscript>
		var selectableColors : dw.util.Collection = new dw.util.ArrayList();
		if( Product.master )
		{
			var varModel : dw.catalog.ProductVariationModel = Product.variationModel;
			var varAttrColor : dw.catalog.ProductVariationAttribute = varModel.getProductVariationAttribute("color");
	
			if( varAttrColor != null )
			{
				var allColors : dw.util.Collection = varModel.getAllValues( varAttrColor );
				
				// filter out colors with not orderable variants
				for each( var color in allColors )
				{
					if( varModel.hasOrderableVariants( varAttrColor, color ) )
					{
						selectableColors.add( color );
					}
				}
			}
		}
	</isscript>
	
	<iscomment>
		Generate link to product detail page. If a color variation is available, the first color is used as link url.
	</iscomment>
	<isset name="productUrl" value="${URLUtils.http('mProduct-Show', 'pid', Product.ID)}" scope="page"/>
	<isif condition="${!empty(selectableColors) && selectableColors.size() > 0}">
		<isset name="colorVarAttr" value="${Product.variationModel.getProductVariationAttribute('color')}" scope="page"/>
		<isset name="productUrl" value="${Product.variationModel.urlSelectVariationValue('xProduct-Show', colorVarAttr, selectableColors.get(0))}" scope="page"/>
	</isif>

	<div><!-- dwMarker="product" dwContentID="${Product.UUID}" -->
		<div>
			
			<iscomment>Render the thumbnail</iscomment>
			<div>
				
				<iscomment>Determine the correct image, either first displayed color variation or default product thumbnail</iscomment>
				<isif condition="${!empty(selectableColors) && selectableColors.size() > 0}">
					<isset name="firstColorVariation" value="${selectableColors.get(0)}" scope="page"/>
					<isset name="image" value="${firstColorVariation.getImage('medium')}" scope="page"/>
				<iselse/>
					<isset name="image" value="${Product.getImage('medium',0)}" scope="page"/>
				</isif>
				
				<iscomment>If image couldn't be determined, display a "no image" thumbnail</iscomment>
				<isif condition="${!empty(image)}">
					<isset name="thumbnailUrl" value="${image.url}" scope="page"/>
				<iselse/>
					<isset name="thumbnailUrl" value="${URLUtils.staticURL('/images/noimagemedium.png')}" scope="page"/>
				</isif>

				<p >					
					<a href="${URLUtils.url('mProduct-Show','pid', Product.ID)}" ><img src="${thumbnailUrl}" alt="${Product.name}"  /></a>
				</p>
				<!-- IE Hack to Collaspe DIV with display:none -->
			</div>

			<div>
				<a href="${URLUtils.url('mProduct-Show','pid', Product.ID)}" ><!-- QUICKVIEW BUTTON --></a>
			</div><!-- END: quickviewbutton -->

		</div><!-- END: image -->
		<isif condition="${showswatches}">
			<div>
	
				<iscomment>
					Render the color swatch secion for a product. We show color swatches for color variations known to the product master.
				</iscomment>
				<isif condition="${!empty(selectableColors) && selectableColors.size() > 0}">
	
					<iscomment>render a link to the palette and hide the actual palette if there are more than five colors contained</iscomment>
					<isif condition="${selectableColors.size() > 5}">
						<a >${Resource.msg('productresultarea.viewallcolors','search',null)}</a> (<isprint value="${selectableColors.size()}"/>)
					</isif>
	
					<iscomment>render the palette, the first swatch is always preselected</iscomment>
					<div class="palette<isif condition="${selectableColors.size() > 5}"> invisible</isif>">
						<div>
							<isloop items="${selectableColors}" var="colorValue" status="varloop">
	
								<iscomment>Determine the swatch and the thumbnail for this color</iscomment>
								<isset name="colorSwatch" value="${colorValue.getImage('swatch')}" scope="page"/>
								<isset name="colorThumbnail" value="${colorValue.getImage('medium')}" scope="page"/>
	
								<iscomment>If images couldn't be determined, display a "no image" thumbnail</iscomment>
								<isif condition="${!empty(colorSwatch)}">
									<isset name="swatchUrl" value="${colorSwatch.url}" scope="page"/>
								<iselse/>
									<isset name="swatchUrl" value="${URLUtils.staticURL('/images/noimagesmall.png')}" scope="page"/>
								</isif>
								<isif condition="${!empty(colorThumbnail)}">
									<isset name="thumbnailUrl" value="${colorThumbnail.url}" scope="page"/>
								<iselse/>
									<isset name="thumbnailUrl" value="${URLUtils.staticURL('/images/noimagesmall.png')}" scope="page"/>
								</isif>

								<iscomment>build the proper URL</iscomment>
								<isset name="productUrl" value="${URLUtils.http('mProduct-Show','pid',Product.ID,Product.variationModel.getHtmlName(varAttrColor),colorValue.value)}" scope="page"/>

								<a class="swatch <isif condition="${varloop.first}">selected</isif>" title="<isprint value="${colorValue.displayValue}"/>" href="<isprint value="${productUrl}"/>">
									<img  src="${swatchUrl}" alt="<isprint value="${colorValue.displayValue}"/>" />
									<img  src="${thumbnailUrl}" alt="<isprint value="${colorValue.displayValue}"/>" />
								</a>
							</isloop>
							<div><!-- FLOAT CLEAR --></div>
						</div>
					</div>
				</isif>
	
			</div><!-- END:  -->
		</isif>
		<div>
			<a href="${productUrl}" >
				<isprint value="${Product.name}"/>
			</a>
		</div><!-- END: name -->
		<isif condition="${showpricing}">
			<div>
	
				<iscomment>Renders pricing information depending on the option or variation model, as well as scaled prices and so on.</iscomment>
				<div>
					<isif condition="${Product.productSet}">
						<iscomment>Product set pricing</iscomment>
						<div>${Resource.msg('global.buyall','locale',null)}</div>
					<iselseif condition="${Product.master && Product.priceModel.isPriceRange()}"/>
						<iscomment>Product master price range depending on the variants</iscomment>
						<isprint value="${Product.priceModel.minPrice}"/> - <isprint value="${Product.priceModel.maxPrice}"/>
					<iselse/>
						<iscomment>For Product master without a price range get the pricing from its first variant </iscomment>
						<isif condition="${Product.master && !Product.priceModel.isPriceRange()}"/>
							<iscomment>Preserve current product instance</iscomment>
							<isset name="OrgProduct" value="${Product}" scope="page"/>
							<isset name="Product" value="${OrgProduct.variationModel.variants[0]}" scope="page"/>
						</isif>
						<iscomment>
							Regular pricing through price model of the product. If the product is an option product, 
							we have to initialize the product price model with the option model.
						</iscomment>
						<isif condition="${Product.optionProduct}">
							<isset name="PriceModel" value="${Product.getPriceModel(Product.getOptionModel())}" scope="page"/>
						<iselse/>
							<isset name="PriceModel" value="${Product.getPriceModel()}" scope="page"/>
						</isif>
	
						<iscomment>
							Check whether the product has price in the sale pricebook. If so, then
							display two prices: crossed-out standard price and sales price.
						</iscomment>
						<isinclude template="mobile/product/components/standardprice"/>
						<isset name="SalesPrice" value="${PriceModel.getPrice()}" scope="page"/>
						<isset name="ShowStandardPrice" value="${StandardPrice.available && SalesPrice.available && StandardPrice.compareTo(SalesPrice) == 1}" scope="page"/>
						
						<isif condition="${ShowStandardPrice}">
							<div>
								<div><isprint value="${StandardPrice}"/></div>
								<div><isprint value="${SalesPrice}"/></div>
							</div>
						<iselse/>
							<div><isprint value="${SalesPrice}"/></div>
						</isif>
						<isif condition="${!empty(pdict.OrgProduct)}">
							<iscomment>Restore current product instance</iscomment>
							<isset name="Product" value="${OrgProduct}" scope="page"/>
						</isif>
					</isif>
				</div>
	
			</div><!-- END: pricing -->
		</isif>
		<isif condition="${showpromotion}">
			<div>
	
				<iscomment>Render information on active product promotions</iscomment>
				<isset name="promos" value="${dw.campaign.PromotionMgr.activeCustomerPromotions.getProductPromotions(Product)}" scope="page"/>
				<isif condition="${!empty(promos)}">
					<isloop items="${promos}" alias="promo">
						<div>
							<isprint value="${promo.calloutMsg}" encoding="off"/>
						</div>
					</isloop>
				</isif>
	
			</div><!-- END: promo -->
		</isif>
		<div><!-- FLOAT CLEAR --></div>
	</div><!-- END: producttile -->
<iselse/>
	<!-- Product was not in dictionary, so blank. -->
</isif>
