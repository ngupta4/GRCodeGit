/**
* Demandware Script File
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*   @input Request : dw.system.Request
*   @input rem : Boolean
*   @input kitRequest : Boolean
*   @input TargetPipeline : String
*   @input TargetPipelineParams : String
*   @output Location : String
*
*/
importPackage( dw.system );

function execute( args : PipelineDictionary ) : Number
{
	var loc : String;
	
		var protocol : String	= args.Request.httpProtocol;
		var rem = args.rem?args.rem:"";
		var queryString = "?rd=true";
		if(args.rem){
			queryString=queryString+"&rem="+args.rem;
		}
		var host = Site.current.getCustomPreferenceValue("SiteRedirectDomain");
	 	var path : String	= dw.web.Resource.msg('site.vcilogin.path','configuration',null);
	 	//queryString = args.Request.httpQueryString;
	 	if(path.indexOf(dw.web.Resource.msg('site.name1','configuration',null))!=-1){
	 		path = path.replace(dw.web.Resource.msg('site.name1','configuration',null), dw.web.Resource.msg('site.name2','configuration',null));
	 	}else{
	 		path = path.replace(dw.web.Resource.msg('site.name2','configuration',null), dw.web.Resource.msg('site.name1','configuration',null));
	 	}
	 	var len = path.lastIndexOf("/");
	 	var path1 = path.slice(0, len+1);
	 	var path2 = path.slice(len+1, path.length);
	 	
	 	if(null!=args.TargetPipeline){
	 		queryString = queryString+"&tp="+args.TargetPipeline;
	 	}else{
	 		queryString = queryString+"&tp="+path2;
	 	}
	 	
	 	if(null!=args.TargetPipelineParams){
	 		queryString = queryString+"&"+args.TargetPipelineParams;
	 	}
	 	
	 	var paramString : String =SetSessionParams(queryString);
	 	
	 	loc  =  protocol+"://"+host+path1+dw.web.Resource.msg('site.login.redirect.pipe','configuration',null)+paramString;
	 	
	 	 if(args.kitRequest){
	 	 	loc = protocol+"://"+host+path;
	 	 }
	 	
	
 	args.Location = loc;
   	return PIPELET_NEXT;
}


function SetSessionParams(queryString){
	var paramString : String = queryString;
	var keycode = session.custom.sKeyCode;//Here sKeycode in session is KeyCode from original queryparams .
	var trackid = session.custom.sTrackID;//Here Keycode in session is trackid from original queryparams .
	
	//Check if trackid is in session and not in queryString then pass trackid in queryString
	if(null!=trackid){
		if(paramString.indexOf("trackid") == -1)
		{
			paramString = paramString + "&trackid="+trackid;
		}
	}
	
	//Check if keycode is in session and not in queryString then pass keycode in queryString
	if(null!=keycode){
		if(paramString.indexOf("keycode") == -1)
		{
			paramString = paramString + "&keycode="+keycode;
		}
	}
	
	return paramString;
}